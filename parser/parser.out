Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SEMICOLON

Grammar

Rule 0     S' -> statement
Rule 1     statement -> create_table_statement
Rule 2     statement -> drop_table_statement
Rule 3     statement -> create_index_statement
Rule 4     statement -> drop_index_statement
Rule 5     statement -> select_statement
Rule 6     statement -> insert_statement
Rule 7     statement -> update_statement
Rule 8     statement -> delete_statement
Rule 9     statement -> show_tables_statement
Rule 10    statement -> describe_statement
Rule 11    show_tables_statement -> SHOW TABLES
Rule 12    describe_statement -> DESCRIBE IDENTIFIER
Rule 13    create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN
Rule 14    column_def_list -> column_def
Rule 15    column_def_list -> column_def COMMA column_def_list
Rule 16    column_def -> IDENTIFIER INTEGER primary_key_opt
Rule 17    column_def -> IDENTIFIER STRING primary_key_opt
Rule 18    column_def -> foreign_key_def
Rule 19    primary_key_opt -> PRIMARY KEY
Rule 20    primary_key_opt -> <empty>
Rule 21    foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 22    drop_table_statement -> DROP TABLE IDENTIFIER
Rule 23    create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 24    drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 25    select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
Rule 26    select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
Rule 27    select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
Rule 28    select_list -> ASTERISK
Rule 29    select_list -> column_list
Rule 30    column_list -> column_item
Rule 31    column_list -> column_item COMMA column_list
Rule 32    column_item -> IDENTIFIER
Rule 33    column_item -> IDENTIFIER DOT IDENTIFIER
Rule 34    column_item -> IDENTIFIER AS IDENTIFIER
Rule 35    column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
Rule 36    column_item -> aggregation_function
Rule 37    column_item -> aggregation_function AS IDENTIFIER
Rule 38    aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 39    aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN
Rule 40    aggregation_function -> COUNT LPAREN ASTERISK RPAREN
Rule 41    aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN
Rule 42    aggregation_function -> AVG LPAREN IDENTIFIER RPAREN
Rule 43    aggregation_function -> SUM LPAREN IDENTIFIER RPAREN
Rule 44    aggregation_function -> MAX LPAREN IDENTIFIER RPAREN
Rule 45    aggregation_function -> MIN LPAREN IDENTIFIER RPAREN
Rule 46    table_reference -> IDENTIFIER
Rule 47    table_reference -> IDENTIFIER IDENTIFIER
Rule 48    table_reference -> IDENTIFIER AS IDENTIFIER
Rule 49    join_clauses_opt -> join_clause
Rule 50    join_clauses_opt -> join_clause join_clauses_opt
Rule 51    join_clauses_opt -> <empty>
Rule 52    join_clause -> JOIN IDENTIFIER ON join_condition
Rule 53    join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition
Rule 54    join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition
Rule 55    join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER
Rule 56    where_clause_opt -> WHERE condition
Rule 57    where_clause_opt -> <empty>
Rule 58    group_by_clause_opt -> GROUP BY column_list
Rule 59    group_by_clause_opt -> <empty>
Rule 60    subquery -> SELECT select_list FROM table_reference where_clause_opt
Rule 61    condition -> simple_condition
Rule 62    condition -> condition AND condition
Rule 63    condition -> condition OR condition
Rule 64    condition -> LPAREN condition RPAREN
Rule 65    simple_condition -> comparison
Rule 66    simple_condition -> subquery_condition
Rule 67    subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN
Rule 68    subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN
Rule 69    comparison -> IDENTIFIER comp_operator expression
Rule 70    comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression
Rule 71    comp_operator -> EQUALS
Rule 72    comp_operator -> NOTEQUALS
Rule 73    comp_operator -> LT
Rule 74    comp_operator -> GT
Rule 75    comp_operator -> LE
Rule 76    comp_operator -> GE
Rule 77    expression -> IDENTIFIER
Rule 78    expression -> NUMBER
Rule 79    expression -> STRING_LITERAL
Rule 80    order_by_clause_opt -> ORDER BY order_list
Rule 81    order_by_clause_opt -> <empty>
Rule 82    order_list -> order_item
Rule 83    order_list -> order_item COMMA order_list
Rule 84    order_item -> IDENTIFIER
Rule 85    order_item -> IDENTIFIER ASC
Rule 86    order_item -> IDENTIFIER DESC
Rule 87    having_clause_opt -> HAVING condition
Rule 88    having_clause_opt -> <empty>
Rule 89    limit_clause -> LIMIT NUMBER
Rule 90    limit_clause -> LIMIT NUMBER OFFSET NUMBER
Rule 91    offset_clause -> OFFSET NUMBER
Rule 92    insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN
Rule 93    value_list -> expression
Rule 94    value_list -> expression COMMA value_list
Rule 95    update_statement -> UPDATE IDENTIFIER SET set_list where_clause_opt
Rule 96    set_list -> set_item
Rule 97    set_list -> set_item COMMA set_list
Rule 98    set_item -> IDENTIFIER EQUALS expression
Rule 99    delete_statement -> DELETE FROM IDENTIFIER where_clause_opt

Terminals, with rules where they appear

AND                  : 62
AS                   : 34 35 37 48 54
ASC                  : 85
ASTERISK             : 28 39 40
AVG                  : 42
BY                   : 58 80
COMMA                : 15 31 83 94 97
COUNT                : 40 41
CREATE               : 13 23
DELETE               : 99
DESC                 : 86
DESCRIBE             : 12
DOT                  : 33 35 55 55 68 70
DROP                 : 22 24
EQUALS               : 55 71 98
FOREIGN              : 21
FROM                 : 25 26 27 60 99
GE                   : 76
GROUP                : 58
GT                   : 74
HAVING               : 87
IDENTIFIER           : 12 13 16 17 21 21 21 22 23 23 24 24 32 33 33 34 34 35 35 35 37 38 38 39 41 42 43 44 45 46 47 47 48 48 52 53 53 54 54 55 55 55 55 67 68 68 69 70 70 77 84 85 86 92 95 98 99
IN                   : 67 68
INDEX                : 23 24
INSERT               : 92
INTEGER              : 16
INTO                 : 92
JOIN                 : 52 53 54
KEY                  : 19 21
LE                   : 75
LIMIT                : 89 90
LPAREN               : 13 21 21 23 24 38 39 40 41 42 43 44 45 64 67 68 92
LT                   : 73
MAX                  : 44
MIN                  : 45
NOTEQUALS            : 72
NUMBER               : 78 89 90 90 91
OFFSET               : 90 91
ON                   : 23 24 52 53 54
OR                   : 63
ORDER                : 80
PRIMARY              : 19
REFERENCES           : 21
RPAREN               : 13 21 21 23 24 38 39 40 41 42 43 44 45 64 67 68 92
SELECT               : 25 26 27 60
SEMICOLON            : 
SET                  : 95
SHOW                 : 11
STRING               : 17
STRING_LITERAL       : 79
SUM                  : 43
TABLE                : 13 22
TABLES               : 11
UPDATE               : 95
VALUES               : 92
WHERE                : 56
error                : 

Nonterminals, with rules where they appear

aggregation_function : 36 37
column_def           : 14 15
column_def_list      : 13 15
column_item          : 30 31
column_list          : 29 31 58
comp_operator        : 69 70
comparison           : 65
condition            : 56 62 62 63 63 64 87
create_index_statement : 3
create_table_statement : 1
delete_statement     : 8
describe_statement   : 10
drop_index_statement : 4
drop_table_statement : 2
expression           : 69 70 93 94 98
foreign_key_def      : 18
group_by_clause_opt  : 25 26 27
having_clause_opt    : 25 26 27
insert_statement     : 6
join_clause          : 49 50
join_clauses_opt     : 25 26 27 50
join_condition       : 52 53 54
limit_clause         : 26 27
offset_clause        : 27
order_by_clause_opt  : 25 26 27
order_item           : 82 83
order_list           : 80 83
primary_key_opt      : 16 17
select_list          : 25 26 27 60
select_statement     : 5
set_item             : 96 97
set_list             : 95 97
show_tables_statement : 9
simple_condition     : 61
statement            : 0
subquery             : 67 68
subquery_condition   : 66
table_reference      : 25 26 27 60
update_statement     : 7
value_list           : 92 94
where_clause_opt     : 25 26 27 60 95 99

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . create_table_statement
    (2) statement -> . drop_table_statement
    (3) statement -> . create_index_statement
    (4) statement -> . drop_index_statement
    (5) statement -> . select_statement
    (6) statement -> . insert_statement
    (7) statement -> . update_statement
    (8) statement -> . delete_statement
    (9) statement -> . show_tables_statement
    (10) statement -> . describe_statement
    (13) create_table_statement -> . CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN
    (22) drop_table_statement -> . DROP TABLE IDENTIFIER
    (23) create_index_statement -> . CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
    (24) drop_index_statement -> . DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
    (25) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (92) insert_statement -> . INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN
    (95) update_statement -> . UPDATE IDENTIFIER SET set_list where_clause_opt
    (99) delete_statement -> . DELETE FROM IDENTIFIER where_clause_opt
    (11) show_tables_statement -> . SHOW TABLES
    (12) describe_statement -> . DESCRIBE IDENTIFIER

    CREATE          shift and go to state 12
    DROP            shift and go to state 13
    SELECT          shift and go to state 14
    INSERT          shift and go to state 15
    UPDATE          shift and go to state 16
    DELETE          shift and go to state 17
    SHOW            shift and go to state 18
    DESCRIBE        shift and go to state 19

    statement                      shift and go to state 1
    create_table_statement         shift and go to state 2
    drop_table_statement           shift and go to state 3
    create_index_statement         shift and go to state 4
    drop_index_statement           shift and go to state 5
    select_statement               shift and go to state 6
    insert_statement               shift and go to state 7
    update_statement               shift and go to state 8
    delete_statement               shift and go to state 9
    show_tables_statement          shift and go to state 10
    describe_statement             shift and go to state 11

state 1

    (0) S' -> statement .



state 2

    (1) statement -> create_table_statement .

    $end            reduce using rule 1 (statement -> create_table_statement .)


state 3

    (2) statement -> drop_table_statement .

    $end            reduce using rule 2 (statement -> drop_table_statement .)


state 4

    (3) statement -> create_index_statement .

    $end            reduce using rule 3 (statement -> create_index_statement .)


state 5

    (4) statement -> drop_index_statement .

    $end            reduce using rule 4 (statement -> drop_index_statement .)


state 6

    (5) statement -> select_statement .

    $end            reduce using rule 5 (statement -> select_statement .)


state 7

    (6) statement -> insert_statement .

    $end            reduce using rule 6 (statement -> insert_statement .)


state 8

    (7) statement -> update_statement .

    $end            reduce using rule 7 (statement -> update_statement .)


state 9

    (8) statement -> delete_statement .

    $end            reduce using rule 8 (statement -> delete_statement .)


state 10

    (9) statement -> show_tables_statement .

    $end            reduce using rule 9 (statement -> show_tables_statement .)


state 11

    (10) statement -> describe_statement .

    $end            reduce using rule 10 (statement -> describe_statement .)


state 12

    (13) create_table_statement -> CREATE . TABLE IDENTIFIER LPAREN column_def_list RPAREN
    (23) create_index_statement -> CREATE . INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    TABLE           shift and go to state 20
    INDEX           shift and go to state 21


state 13

    (22) drop_table_statement -> DROP . TABLE IDENTIFIER
    (24) drop_index_statement -> DROP . INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    TABLE           shift and go to state 22
    INDEX           shift and go to state 23


state 14

    (25) select_statement -> SELECT . select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT . select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT . select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (28) select_list -> . ASTERISK
    (29) select_list -> . column_list
    (30) column_list -> . column_item
    (31) column_list -> . column_item COMMA column_list
    (32) column_item -> . IDENTIFIER
    (33) column_item -> . IDENTIFIER DOT IDENTIFIER
    (34) column_item -> . IDENTIFIER AS IDENTIFIER
    (35) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (36) column_item -> . aggregation_function
    (37) column_item -> . aggregation_function AS IDENTIFIER
    (38) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (39) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (40) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (41) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (42) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (43) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (44) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (45) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    ASTERISK        shift and go to state 25
    IDENTIFIER      shift and go to state 28
    COUNT           shift and go to state 30
    AVG             shift and go to state 31
    SUM             shift and go to state 32
    MAX             shift and go to state 33
    MIN             shift and go to state 34

    select_list                    shift and go to state 24
    column_list                    shift and go to state 26
    column_item                    shift and go to state 27
    aggregation_function           shift and go to state 29

state 15

    (92) insert_statement -> INSERT . INTO IDENTIFIER VALUES LPAREN value_list RPAREN

    INTO            shift and go to state 35


state 16

    (95) update_statement -> UPDATE . IDENTIFIER SET set_list where_clause_opt

    IDENTIFIER      shift and go to state 36


state 17

    (99) delete_statement -> DELETE . FROM IDENTIFIER where_clause_opt

    FROM            shift and go to state 37


state 18

    (11) show_tables_statement -> SHOW . TABLES

    TABLES          shift and go to state 38


state 19

    (12) describe_statement -> DESCRIBE . IDENTIFIER

    IDENTIFIER      shift and go to state 39


state 20

    (13) create_table_statement -> CREATE TABLE . IDENTIFIER LPAREN column_def_list RPAREN

    IDENTIFIER      shift and go to state 40


state 21

    (23) create_index_statement -> CREATE INDEX . ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    ON              shift and go to state 41


state 22

    (22) drop_table_statement -> DROP TABLE . IDENTIFIER

    IDENTIFIER      shift and go to state 42


state 23

    (24) drop_index_statement -> DROP INDEX . ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    ON              shift and go to state 43


state 24

    (25) select_statement -> SELECT select_list . FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT select_list . FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list . FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause

    FROM            shift and go to state 44


state 25

    (28) select_list -> ASTERISK .

    FROM            reduce using rule 28 (select_list -> ASTERISK .)


state 26

    (29) select_list -> column_list .

    FROM            reduce using rule 29 (select_list -> column_list .)


state 27

    (30) column_list -> column_item .
    (31) column_list -> column_item . COMMA column_list

    FROM            reduce using rule 30 (column_list -> column_item .)
    ORDER           reduce using rule 30 (column_list -> column_item .)
    HAVING          reduce using rule 30 (column_list -> column_item .)
    LIMIT           reduce using rule 30 (column_list -> column_item .)
    $end            reduce using rule 30 (column_list -> column_item .)
    COMMA           shift and go to state 45


state 28

    (32) column_item -> IDENTIFIER .
    (33) column_item -> IDENTIFIER . DOT IDENTIFIER
    (34) column_item -> IDENTIFIER . AS IDENTIFIER
    (35) column_item -> IDENTIFIER . DOT IDENTIFIER AS IDENTIFIER
    (38) aggregation_function -> IDENTIFIER . LPAREN IDENTIFIER RPAREN
    (39) aggregation_function -> IDENTIFIER . LPAREN ASTERISK RPAREN

    COMMA           reduce using rule 32 (column_item -> IDENTIFIER .)
    FROM            reduce using rule 32 (column_item -> IDENTIFIER .)
    ORDER           reduce using rule 32 (column_item -> IDENTIFIER .)
    HAVING          reduce using rule 32 (column_item -> IDENTIFIER .)
    LIMIT           reduce using rule 32 (column_item -> IDENTIFIER .)
    $end            reduce using rule 32 (column_item -> IDENTIFIER .)
    DOT             shift and go to state 46
    AS              shift and go to state 47
    LPAREN          shift and go to state 48


state 29

    (36) column_item -> aggregation_function .
    (37) column_item -> aggregation_function . AS IDENTIFIER

    COMMA           reduce using rule 36 (column_item -> aggregation_function .)
    FROM            reduce using rule 36 (column_item -> aggregation_function .)
    ORDER           reduce using rule 36 (column_item -> aggregation_function .)
    HAVING          reduce using rule 36 (column_item -> aggregation_function .)
    LIMIT           reduce using rule 36 (column_item -> aggregation_function .)
    $end            reduce using rule 36 (column_item -> aggregation_function .)
    AS              shift and go to state 49


state 30

    (40) aggregation_function -> COUNT . LPAREN ASTERISK RPAREN
    (41) aggregation_function -> COUNT . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 50


state 31

    (42) aggregation_function -> AVG . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 51


state 32

    (43) aggregation_function -> SUM . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 52


state 33

    (44) aggregation_function -> MAX . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 53


state 34

    (45) aggregation_function -> MIN . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 54


state 35

    (92) insert_statement -> INSERT INTO . IDENTIFIER VALUES LPAREN value_list RPAREN

    IDENTIFIER      shift and go to state 55


state 36

    (95) update_statement -> UPDATE IDENTIFIER . SET set_list where_clause_opt

    SET             shift and go to state 56


state 37

    (99) delete_statement -> DELETE FROM . IDENTIFIER where_clause_opt

    IDENTIFIER      shift and go to state 57


state 38

    (11) show_tables_statement -> SHOW TABLES .

    $end            reduce using rule 11 (show_tables_statement -> SHOW TABLES .)


state 39

    (12) describe_statement -> DESCRIBE IDENTIFIER .

    $end            reduce using rule 12 (describe_statement -> DESCRIBE IDENTIFIER .)


state 40

    (13) create_table_statement -> CREATE TABLE IDENTIFIER . LPAREN column_def_list RPAREN

    LPAREN          shift and go to state 58


state 41

    (23) create_index_statement -> CREATE INDEX ON . IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 59


state 42

    (22) drop_table_statement -> DROP TABLE IDENTIFIER .

    $end            reduce using rule 22 (drop_table_statement -> DROP TABLE IDENTIFIER .)


state 43

    (24) drop_index_statement -> DROP INDEX ON . IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 60


state 44

    (25) select_statement -> SELECT select_list FROM . table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT select_list FROM . table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list FROM . table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (46) table_reference -> . IDENTIFIER
    (47) table_reference -> . IDENTIFIER IDENTIFIER
    (48) table_reference -> . IDENTIFIER AS IDENTIFIER

    IDENTIFIER      shift and go to state 62

    table_reference                shift and go to state 61

state 45

    (31) column_list -> column_item COMMA . column_list
    (30) column_list -> . column_item
    (31) column_list -> . column_item COMMA column_list
    (32) column_item -> . IDENTIFIER
    (33) column_item -> . IDENTIFIER DOT IDENTIFIER
    (34) column_item -> . IDENTIFIER AS IDENTIFIER
    (35) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (36) column_item -> . aggregation_function
    (37) column_item -> . aggregation_function AS IDENTIFIER
    (38) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (39) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (40) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (41) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (42) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (43) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (44) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (45) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 28
    COUNT           shift and go to state 30
    AVG             shift and go to state 31
    SUM             shift and go to state 32
    MAX             shift and go to state 33
    MIN             shift and go to state 34

    column_item                    shift and go to state 27
    column_list                    shift and go to state 63
    aggregation_function           shift and go to state 29

state 46

    (33) column_item -> IDENTIFIER DOT . IDENTIFIER
    (35) column_item -> IDENTIFIER DOT . IDENTIFIER AS IDENTIFIER

    IDENTIFIER      shift and go to state 64


state 47

    (34) column_item -> IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 65


state 48

    (38) aggregation_function -> IDENTIFIER LPAREN . IDENTIFIER RPAREN
    (39) aggregation_function -> IDENTIFIER LPAREN . ASTERISK RPAREN

    IDENTIFIER      shift and go to state 66
    ASTERISK        shift and go to state 67


state 49

    (37) column_item -> aggregation_function AS . IDENTIFIER

    IDENTIFIER      shift and go to state 68


state 50

    (40) aggregation_function -> COUNT LPAREN . ASTERISK RPAREN
    (41) aggregation_function -> COUNT LPAREN . IDENTIFIER RPAREN

    ASTERISK        shift and go to state 69
    IDENTIFIER      shift and go to state 70


state 51

    (42) aggregation_function -> AVG LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 71


state 52

    (43) aggregation_function -> SUM LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 72


state 53

    (44) aggregation_function -> MAX LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 73


state 54

    (45) aggregation_function -> MIN LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 74


state 55

    (92) insert_statement -> INSERT INTO IDENTIFIER . VALUES LPAREN value_list RPAREN

    VALUES          shift and go to state 75


state 56

    (95) update_statement -> UPDATE IDENTIFIER SET . set_list where_clause_opt
    (96) set_list -> . set_item
    (97) set_list -> . set_item COMMA set_list
    (98) set_item -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 76

    set_list                       shift and go to state 77
    set_item                       shift and go to state 78

state 57

    (99) delete_statement -> DELETE FROM IDENTIFIER . where_clause_opt
    (56) where_clause_opt -> . WHERE condition
    (57) where_clause_opt -> .

    WHERE           shift and go to state 80
    $end            reduce using rule 57 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 79

state 58

    (13) create_table_statement -> CREATE TABLE IDENTIFIER LPAREN . column_def_list RPAREN
    (14) column_def_list -> . column_def
    (15) column_def_list -> . column_def COMMA column_def_list
    (16) column_def -> . IDENTIFIER INTEGER primary_key_opt
    (17) column_def -> . IDENTIFIER STRING primary_key_opt
    (18) column_def -> . foreign_key_def
    (21) foreign_key_def -> . FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 81
    FOREIGN         shift and go to state 85

    column_def_list                shift and go to state 82
    column_def                     shift and go to state 83
    foreign_key_def                shift and go to state 84

state 59

    (23) create_index_statement -> CREATE INDEX ON IDENTIFIER . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 86


state 60

    (24) drop_index_statement -> DROP INDEX ON IDENTIFIER . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 87


state 61

    (25) select_statement -> SELECT select_list FROM table_reference . join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT select_list FROM table_reference . join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list FROM table_reference . join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (49) join_clauses_opt -> . join_clause
    (50) join_clauses_opt -> . join_clause join_clauses_opt
    (51) join_clauses_opt -> .
    (52) join_clause -> . JOIN IDENTIFIER ON join_condition
    (53) join_clause -> . JOIN IDENTIFIER IDENTIFIER ON join_condition
    (54) join_clause -> . JOIN IDENTIFIER AS IDENTIFIER ON join_condition

    WHERE           reduce using rule 51 (join_clauses_opt -> .)
    GROUP           reduce using rule 51 (join_clauses_opt -> .)
    ORDER           reduce using rule 51 (join_clauses_opt -> .)
    HAVING          reduce using rule 51 (join_clauses_opt -> .)
    LIMIT           reduce using rule 51 (join_clauses_opt -> .)
    $end            reduce using rule 51 (join_clauses_opt -> .)
    JOIN            shift and go to state 90

    join_clauses_opt               shift and go to state 88
    join_clause                    shift and go to state 89

state 62

    (46) table_reference -> IDENTIFIER .
    (47) table_reference -> IDENTIFIER . IDENTIFIER
    (48) table_reference -> IDENTIFIER . AS IDENTIFIER

    JOIN            reduce using rule 46 (table_reference -> IDENTIFIER .)
    WHERE           reduce using rule 46 (table_reference -> IDENTIFIER .)
    GROUP           reduce using rule 46 (table_reference -> IDENTIFIER .)
    ORDER           reduce using rule 46 (table_reference -> IDENTIFIER .)
    HAVING          reduce using rule 46 (table_reference -> IDENTIFIER .)
    LIMIT           reduce using rule 46 (table_reference -> IDENTIFIER .)
    $end            reduce using rule 46 (table_reference -> IDENTIFIER .)
    RPAREN          reduce using rule 46 (table_reference -> IDENTIFIER .)
    IDENTIFIER      shift and go to state 91
    AS              shift and go to state 92


state 63

    (31) column_list -> column_item COMMA column_list .

    FROM            reduce using rule 31 (column_list -> column_item COMMA column_list .)
    ORDER           reduce using rule 31 (column_list -> column_item COMMA column_list .)
    HAVING          reduce using rule 31 (column_list -> column_item COMMA column_list .)
    LIMIT           reduce using rule 31 (column_list -> column_item COMMA column_list .)
    $end            reduce using rule 31 (column_list -> column_item COMMA column_list .)


state 64

    (33) column_item -> IDENTIFIER DOT IDENTIFIER .
    (35) column_item -> IDENTIFIER DOT IDENTIFIER . AS IDENTIFIER

    COMMA           reduce using rule 33 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    FROM            reduce using rule 33 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    ORDER           reduce using rule 33 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    HAVING          reduce using rule 33 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    LIMIT           reduce using rule 33 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 33 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    AS              shift and go to state 93


state 65

    (34) column_item -> IDENTIFIER AS IDENTIFIER .

    COMMA           reduce using rule 34 (column_item -> IDENTIFIER AS IDENTIFIER .)
    FROM            reduce using rule 34 (column_item -> IDENTIFIER AS IDENTIFIER .)
    ORDER           reduce using rule 34 (column_item -> IDENTIFIER AS IDENTIFIER .)
    HAVING          reduce using rule 34 (column_item -> IDENTIFIER AS IDENTIFIER .)
    LIMIT           reduce using rule 34 (column_item -> IDENTIFIER AS IDENTIFIER .)
    $end            reduce using rule 34 (column_item -> IDENTIFIER AS IDENTIFIER .)


state 66

    (38) aggregation_function -> IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 94


state 67

    (39) aggregation_function -> IDENTIFIER LPAREN ASTERISK . RPAREN

    RPAREN          shift and go to state 95


state 68

    (37) column_item -> aggregation_function AS IDENTIFIER .

    COMMA           reduce using rule 37 (column_item -> aggregation_function AS IDENTIFIER .)
    FROM            reduce using rule 37 (column_item -> aggregation_function AS IDENTIFIER .)
    ORDER           reduce using rule 37 (column_item -> aggregation_function AS IDENTIFIER .)
    HAVING          reduce using rule 37 (column_item -> aggregation_function AS IDENTIFIER .)
    LIMIT           reduce using rule 37 (column_item -> aggregation_function AS IDENTIFIER .)
    $end            reduce using rule 37 (column_item -> aggregation_function AS IDENTIFIER .)


state 69

    (40) aggregation_function -> COUNT LPAREN ASTERISK . RPAREN

    RPAREN          shift and go to state 96


state 70

    (41) aggregation_function -> COUNT LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 97


state 71

    (42) aggregation_function -> AVG LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 98


state 72

    (43) aggregation_function -> SUM LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 99


state 73

    (44) aggregation_function -> MAX LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 100


state 74

    (45) aggregation_function -> MIN LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 101


state 75

    (92) insert_statement -> INSERT INTO IDENTIFIER VALUES . LPAREN value_list RPAREN

    LPAREN          shift and go to state 102


state 76

    (98) set_item -> IDENTIFIER . EQUALS expression

    EQUALS          shift and go to state 103


state 77

    (95) update_statement -> UPDATE IDENTIFIER SET set_list . where_clause_opt
    (56) where_clause_opt -> . WHERE condition
    (57) where_clause_opt -> .

    WHERE           shift and go to state 80
    $end            reduce using rule 57 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 104

state 78

    (96) set_list -> set_item .
    (97) set_list -> set_item . COMMA set_list

    WHERE           reduce using rule 96 (set_list -> set_item .)
    $end            reduce using rule 96 (set_list -> set_item .)
    COMMA           shift and go to state 105


state 79

    (99) delete_statement -> DELETE FROM IDENTIFIER where_clause_opt .

    $end            reduce using rule 99 (delete_statement -> DELETE FROM IDENTIFIER where_clause_opt .)


state 80

    (56) where_clause_opt -> WHERE . condition
    (61) condition -> . simple_condition
    (62) condition -> . condition AND condition
    (63) condition -> . condition OR condition
    (64) condition -> . LPAREN condition RPAREN
    (65) simple_condition -> . comparison
    (66) simple_condition -> . subquery_condition
    (69) comparison -> . IDENTIFIER comp_operator expression
    (70) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (67) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (68) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 108
    IDENTIFIER      shift and go to state 111

    condition                      shift and go to state 106
    simple_condition               shift and go to state 107
    comparison                     shift and go to state 109
    subquery_condition             shift and go to state 110

state 81

    (16) column_def -> IDENTIFIER . INTEGER primary_key_opt
    (17) column_def -> IDENTIFIER . STRING primary_key_opt

    INTEGER         shift and go to state 112
    STRING          shift and go to state 113


state 82

    (13) create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list . RPAREN

    RPAREN          shift and go to state 114


state 83

    (14) column_def_list -> column_def .
    (15) column_def_list -> column_def . COMMA column_def_list

    RPAREN          reduce using rule 14 (column_def_list -> column_def .)
    COMMA           shift and go to state 115


state 84

    (18) column_def -> foreign_key_def .

    COMMA           reduce using rule 18 (column_def -> foreign_key_def .)
    RPAREN          reduce using rule 18 (column_def -> foreign_key_def .)


state 85

    (21) foreign_key_def -> FOREIGN . KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    KEY             shift and go to state 116


state 86

    (23) create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 117


state 87

    (24) drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 118


state 88

    (25) select_statement -> SELECT select_list FROM table_reference join_clauses_opt . where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT select_list FROM table_reference join_clauses_opt . where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt . where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (56) where_clause_opt -> . WHERE condition
    (57) where_clause_opt -> .

    WHERE           shift and go to state 80
    GROUP           reduce using rule 57 (where_clause_opt -> .)
    ORDER           reduce using rule 57 (where_clause_opt -> .)
    HAVING          reduce using rule 57 (where_clause_opt -> .)
    LIMIT           reduce using rule 57 (where_clause_opt -> .)
    $end            reduce using rule 57 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 119

state 89

    (49) join_clauses_opt -> join_clause .
    (50) join_clauses_opt -> join_clause . join_clauses_opt
    (49) join_clauses_opt -> . join_clause
    (50) join_clauses_opt -> . join_clause join_clauses_opt
    (51) join_clauses_opt -> .
    (52) join_clause -> . JOIN IDENTIFIER ON join_condition
    (53) join_clause -> . JOIN IDENTIFIER IDENTIFIER ON join_condition
    (54) join_clause -> . JOIN IDENTIFIER AS IDENTIFIER ON join_condition

  ! reduce/reduce conflict for WHERE resolved using rule 49 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for GROUP resolved using rule 49 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for ORDER resolved using rule 49 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for HAVING resolved using rule 49 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for LIMIT resolved using rule 49 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for $end resolved using rule 49 (join_clauses_opt -> join_clause .)
    WHERE           reduce using rule 49 (join_clauses_opt -> join_clause .)
    GROUP           reduce using rule 49 (join_clauses_opt -> join_clause .)
    ORDER           reduce using rule 49 (join_clauses_opt -> join_clause .)
    HAVING          reduce using rule 49 (join_clauses_opt -> join_clause .)
    LIMIT           reduce using rule 49 (join_clauses_opt -> join_clause .)
    $end            reduce using rule 49 (join_clauses_opt -> join_clause .)
    JOIN            shift and go to state 90

  ! WHERE           [ reduce using rule 51 (join_clauses_opt -> .) ]
  ! GROUP           [ reduce using rule 51 (join_clauses_opt -> .) ]
  ! ORDER           [ reduce using rule 51 (join_clauses_opt -> .) ]
  ! HAVING          [ reduce using rule 51 (join_clauses_opt -> .) ]
  ! LIMIT           [ reduce using rule 51 (join_clauses_opt -> .) ]
  ! $end            [ reduce using rule 51 (join_clauses_opt -> .) ]

    join_clause                    shift and go to state 89
    join_clauses_opt               shift and go to state 120

state 90

    (52) join_clause -> JOIN . IDENTIFIER ON join_condition
    (53) join_clause -> JOIN . IDENTIFIER IDENTIFIER ON join_condition
    (54) join_clause -> JOIN . IDENTIFIER AS IDENTIFIER ON join_condition

    IDENTIFIER      shift and go to state 121


state 91

    (47) table_reference -> IDENTIFIER IDENTIFIER .

    JOIN            reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    WHERE           reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    GROUP           reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    ORDER           reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    HAVING          reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    LIMIT           reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    $end            reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)
    RPAREN          reduce using rule 47 (table_reference -> IDENTIFIER IDENTIFIER .)


state 92

    (48) table_reference -> IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 122


state 93

    (35) column_item -> IDENTIFIER DOT IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 123


state 94

    (38) aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 38 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 95

    (39) aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .

    AS              reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    COMMA           reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    FROM            reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    ORDER           reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    HAVING          reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    LIMIT           reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    $end            reduce using rule 39 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)


state 96

    (40) aggregation_function -> COUNT LPAREN ASTERISK RPAREN .

    AS              reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    COMMA           reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    FROM            reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    ORDER           reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    HAVING          reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    LIMIT           reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    $end            reduce using rule 40 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)


state 97

    (41) aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 41 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)


state 98

    (42) aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 42 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)


state 99

    (43) aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 43 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)


state 100

    (44) aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 44 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)


state 101

    (45) aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 45 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)


state 102

    (92) insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN . value_list RPAREN
    (93) value_list -> . expression
    (94) value_list -> . expression COMMA value_list
    (77) expression -> . IDENTIFIER
    (78) expression -> . NUMBER
    (79) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 124
    NUMBER          shift and go to state 127
    STRING_LITERAL  shift and go to state 128

    value_list                     shift and go to state 125
    expression                     shift and go to state 126

state 103

    (98) set_item -> IDENTIFIER EQUALS . expression
    (77) expression -> . IDENTIFIER
    (78) expression -> . NUMBER
    (79) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 124
    NUMBER          shift and go to state 127
    STRING_LITERAL  shift and go to state 128

    expression                     shift and go to state 129

state 104

    (95) update_statement -> UPDATE IDENTIFIER SET set_list where_clause_opt .

    $end            reduce using rule 95 (update_statement -> UPDATE IDENTIFIER SET set_list where_clause_opt .)


state 105

    (97) set_list -> set_item COMMA . set_list
    (96) set_list -> . set_item
    (97) set_list -> . set_item COMMA set_list
    (98) set_item -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 76

    set_item                       shift and go to state 78
    set_list                       shift and go to state 130

state 106

    (56) where_clause_opt -> WHERE condition .
    (62) condition -> condition . AND condition
    (63) condition -> condition . OR condition

    $end            reduce using rule 56 (where_clause_opt -> WHERE condition .)
    GROUP           reduce using rule 56 (where_clause_opt -> WHERE condition .)
    ORDER           reduce using rule 56 (where_clause_opt -> WHERE condition .)
    HAVING          reduce using rule 56 (where_clause_opt -> WHERE condition .)
    LIMIT           reduce using rule 56 (where_clause_opt -> WHERE condition .)
    RPAREN          reduce using rule 56 (where_clause_opt -> WHERE condition .)
    AND             shift and go to state 131
    OR              shift and go to state 132


state 107

    (61) condition -> simple_condition .

    AND             reduce using rule 61 (condition -> simple_condition .)
    OR              reduce using rule 61 (condition -> simple_condition .)
    $end            reduce using rule 61 (condition -> simple_condition .)
    GROUP           reduce using rule 61 (condition -> simple_condition .)
    ORDER           reduce using rule 61 (condition -> simple_condition .)
    HAVING          reduce using rule 61 (condition -> simple_condition .)
    LIMIT           reduce using rule 61 (condition -> simple_condition .)
    RPAREN          reduce using rule 61 (condition -> simple_condition .)


state 108

    (64) condition -> LPAREN . condition RPAREN
    (61) condition -> . simple_condition
    (62) condition -> . condition AND condition
    (63) condition -> . condition OR condition
    (64) condition -> . LPAREN condition RPAREN
    (65) simple_condition -> . comparison
    (66) simple_condition -> . subquery_condition
    (69) comparison -> . IDENTIFIER comp_operator expression
    (70) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (67) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (68) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 108
    IDENTIFIER      shift and go to state 111

    condition                      shift and go to state 133
    simple_condition               shift and go to state 107
    comparison                     shift and go to state 109
    subquery_condition             shift and go to state 110

state 109

    (65) simple_condition -> comparison .

    AND             reduce using rule 65 (simple_condition -> comparison .)
    OR              reduce using rule 65 (simple_condition -> comparison .)
    $end            reduce using rule 65 (simple_condition -> comparison .)
    GROUP           reduce using rule 65 (simple_condition -> comparison .)
    ORDER           reduce using rule 65 (simple_condition -> comparison .)
    HAVING          reduce using rule 65 (simple_condition -> comparison .)
    LIMIT           reduce using rule 65 (simple_condition -> comparison .)
    RPAREN          reduce using rule 65 (simple_condition -> comparison .)


state 110

    (66) simple_condition -> subquery_condition .

    AND             reduce using rule 66 (simple_condition -> subquery_condition .)
    OR              reduce using rule 66 (simple_condition -> subquery_condition .)
    $end            reduce using rule 66 (simple_condition -> subquery_condition .)
    GROUP           reduce using rule 66 (simple_condition -> subquery_condition .)
    ORDER           reduce using rule 66 (simple_condition -> subquery_condition .)
    HAVING          reduce using rule 66 (simple_condition -> subquery_condition .)
    LIMIT           reduce using rule 66 (simple_condition -> subquery_condition .)
    RPAREN          reduce using rule 66 (simple_condition -> subquery_condition .)


state 111

    (69) comparison -> IDENTIFIER . comp_operator expression
    (70) comparison -> IDENTIFIER . DOT IDENTIFIER comp_operator expression
    (67) subquery_condition -> IDENTIFIER . IN LPAREN subquery RPAREN
    (68) subquery_condition -> IDENTIFIER . DOT IDENTIFIER IN LPAREN subquery RPAREN
    (71) comp_operator -> . EQUALS
    (72) comp_operator -> . NOTEQUALS
    (73) comp_operator -> . LT
    (74) comp_operator -> . GT
    (75) comp_operator -> . LE
    (76) comp_operator -> . GE

    DOT             shift and go to state 135
    IN              shift and go to state 136
    EQUALS          shift and go to state 137
    NOTEQUALS       shift and go to state 138
    LT              shift and go to state 139
    GT              shift and go to state 140
    LE              shift and go to state 141
    GE              shift and go to state 142

    comp_operator                  shift and go to state 134

state 112

    (16) column_def -> IDENTIFIER INTEGER . primary_key_opt
    (19) primary_key_opt -> . PRIMARY KEY
    (20) primary_key_opt -> .

    PRIMARY         shift and go to state 144
    COMMA           reduce using rule 20 (primary_key_opt -> .)
    RPAREN          reduce using rule 20 (primary_key_opt -> .)

    primary_key_opt                shift and go to state 143

state 113

    (17) column_def -> IDENTIFIER STRING . primary_key_opt
    (19) primary_key_opt -> . PRIMARY KEY
    (20) primary_key_opt -> .

    PRIMARY         shift and go to state 144
    COMMA           reduce using rule 20 (primary_key_opt -> .)
    RPAREN          reduce using rule 20 (primary_key_opt -> .)

    primary_key_opt                shift and go to state 145

state 114

    (13) create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN .

    $end            reduce using rule 13 (create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN .)


state 115

    (15) column_def_list -> column_def COMMA . column_def_list
    (14) column_def_list -> . column_def
    (15) column_def_list -> . column_def COMMA column_def_list
    (16) column_def -> . IDENTIFIER INTEGER primary_key_opt
    (17) column_def -> . IDENTIFIER STRING primary_key_opt
    (18) column_def -> . foreign_key_def
    (21) foreign_key_def -> . FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 81
    FOREIGN         shift and go to state 85

    column_def                     shift and go to state 83
    column_def_list                shift and go to state 146
    foreign_key_def                shift and go to state 84

state 116

    (21) foreign_key_def -> FOREIGN KEY . LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 147


state 117

    (23) create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 148


state 118

    (24) drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 149


state 119

    (25) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt . group_by_clause_opt order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt . group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt . group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (58) group_by_clause_opt -> . GROUP BY column_list
    (59) group_by_clause_opt -> .

    GROUP           shift and go to state 151
    ORDER           reduce using rule 59 (group_by_clause_opt -> .)
    HAVING          reduce using rule 59 (group_by_clause_opt -> .)
    LIMIT           reduce using rule 59 (group_by_clause_opt -> .)
    $end            reduce using rule 59 (group_by_clause_opt -> .)

    group_by_clause_opt            shift and go to state 150

state 120

    (50) join_clauses_opt -> join_clause join_clauses_opt .

    WHERE           reduce using rule 50 (join_clauses_opt -> join_clause join_clauses_opt .)
    GROUP           reduce using rule 50 (join_clauses_opt -> join_clause join_clauses_opt .)
    ORDER           reduce using rule 50 (join_clauses_opt -> join_clause join_clauses_opt .)
    HAVING          reduce using rule 50 (join_clauses_opt -> join_clause join_clauses_opt .)
    LIMIT           reduce using rule 50 (join_clauses_opt -> join_clause join_clauses_opt .)
    $end            reduce using rule 50 (join_clauses_opt -> join_clause join_clauses_opt .)


state 121

    (52) join_clause -> JOIN IDENTIFIER . ON join_condition
    (53) join_clause -> JOIN IDENTIFIER . IDENTIFIER ON join_condition
    (54) join_clause -> JOIN IDENTIFIER . AS IDENTIFIER ON join_condition

    ON              shift and go to state 153
    IDENTIFIER      shift and go to state 152
    AS              shift and go to state 154


state 122

    (48) table_reference -> IDENTIFIER AS IDENTIFIER .

    JOIN            reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    WHERE           reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    GROUP           reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    ORDER           reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    HAVING          reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    LIMIT           reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    $end            reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    RPAREN          reduce using rule 48 (table_reference -> IDENTIFIER AS IDENTIFIER .)


state 123

    (35) column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .

    COMMA           reduce using rule 35 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    FROM            reduce using rule 35 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    ORDER           reduce using rule 35 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    HAVING          reduce using rule 35 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    LIMIT           reduce using rule 35 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    $end            reduce using rule 35 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)


state 124

    (77) expression -> IDENTIFIER .

    COMMA           reduce using rule 77 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 77 (expression -> IDENTIFIER .)
    WHERE           reduce using rule 77 (expression -> IDENTIFIER .)
    $end            reduce using rule 77 (expression -> IDENTIFIER .)
    AND             reduce using rule 77 (expression -> IDENTIFIER .)
    OR              reduce using rule 77 (expression -> IDENTIFIER .)
    GROUP           reduce using rule 77 (expression -> IDENTIFIER .)
    ORDER           reduce using rule 77 (expression -> IDENTIFIER .)
    HAVING          reduce using rule 77 (expression -> IDENTIFIER .)
    LIMIT           reduce using rule 77 (expression -> IDENTIFIER .)


state 125

    (92) insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list . RPAREN

    RPAREN          shift and go to state 155


state 126

    (93) value_list -> expression .
    (94) value_list -> expression . COMMA value_list

    RPAREN          reduce using rule 93 (value_list -> expression .)
    COMMA           shift and go to state 156


state 127

    (78) expression -> NUMBER .

    COMMA           reduce using rule 78 (expression -> NUMBER .)
    RPAREN          reduce using rule 78 (expression -> NUMBER .)
    WHERE           reduce using rule 78 (expression -> NUMBER .)
    $end            reduce using rule 78 (expression -> NUMBER .)
    AND             reduce using rule 78 (expression -> NUMBER .)
    OR              reduce using rule 78 (expression -> NUMBER .)
    GROUP           reduce using rule 78 (expression -> NUMBER .)
    ORDER           reduce using rule 78 (expression -> NUMBER .)
    HAVING          reduce using rule 78 (expression -> NUMBER .)
    LIMIT           reduce using rule 78 (expression -> NUMBER .)


state 128

    (79) expression -> STRING_LITERAL .

    COMMA           reduce using rule 79 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 79 (expression -> STRING_LITERAL .)
    WHERE           reduce using rule 79 (expression -> STRING_LITERAL .)
    $end            reduce using rule 79 (expression -> STRING_LITERAL .)
    AND             reduce using rule 79 (expression -> STRING_LITERAL .)
    OR              reduce using rule 79 (expression -> STRING_LITERAL .)
    GROUP           reduce using rule 79 (expression -> STRING_LITERAL .)
    ORDER           reduce using rule 79 (expression -> STRING_LITERAL .)
    HAVING          reduce using rule 79 (expression -> STRING_LITERAL .)
    LIMIT           reduce using rule 79 (expression -> STRING_LITERAL .)


state 129

    (98) set_item -> IDENTIFIER EQUALS expression .

    COMMA           reduce using rule 98 (set_item -> IDENTIFIER EQUALS expression .)
    WHERE           reduce using rule 98 (set_item -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 98 (set_item -> IDENTIFIER EQUALS expression .)


state 130

    (97) set_list -> set_item COMMA set_list .

    WHERE           reduce using rule 97 (set_list -> set_item COMMA set_list .)
    $end            reduce using rule 97 (set_list -> set_item COMMA set_list .)


state 131

    (62) condition -> condition AND . condition
    (61) condition -> . simple_condition
    (62) condition -> . condition AND condition
    (63) condition -> . condition OR condition
    (64) condition -> . LPAREN condition RPAREN
    (65) simple_condition -> . comparison
    (66) simple_condition -> . subquery_condition
    (69) comparison -> . IDENTIFIER comp_operator expression
    (70) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (67) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (68) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 108
    IDENTIFIER      shift and go to state 111

    condition                      shift and go to state 157
    simple_condition               shift and go to state 107
    comparison                     shift and go to state 109
    subquery_condition             shift and go to state 110

state 132

    (63) condition -> condition OR . condition
    (61) condition -> . simple_condition
    (62) condition -> . condition AND condition
    (63) condition -> . condition OR condition
    (64) condition -> . LPAREN condition RPAREN
    (65) simple_condition -> . comparison
    (66) simple_condition -> . subquery_condition
    (69) comparison -> . IDENTIFIER comp_operator expression
    (70) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (67) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (68) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 108
    IDENTIFIER      shift and go to state 111

    condition                      shift and go to state 158
    simple_condition               shift and go to state 107
    comparison                     shift and go to state 109
    subquery_condition             shift and go to state 110

state 133

    (64) condition -> LPAREN condition . RPAREN
    (62) condition -> condition . AND condition
    (63) condition -> condition . OR condition

    RPAREN          shift and go to state 159
    AND             shift and go to state 131
    OR              shift and go to state 132


state 134

    (69) comparison -> IDENTIFIER comp_operator . expression
    (77) expression -> . IDENTIFIER
    (78) expression -> . NUMBER
    (79) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 124
    NUMBER          shift and go to state 127
    STRING_LITERAL  shift and go to state 128

    expression                     shift and go to state 160

state 135

    (70) comparison -> IDENTIFIER DOT . IDENTIFIER comp_operator expression
    (68) subquery_condition -> IDENTIFIER DOT . IDENTIFIER IN LPAREN subquery RPAREN

    IDENTIFIER      shift and go to state 161


state 136

    (67) subquery_condition -> IDENTIFIER IN . LPAREN subquery RPAREN

    LPAREN          shift and go to state 162


state 137

    (71) comp_operator -> EQUALS .

    IDENTIFIER      reduce using rule 71 (comp_operator -> EQUALS .)
    NUMBER          reduce using rule 71 (comp_operator -> EQUALS .)
    STRING_LITERAL  reduce using rule 71 (comp_operator -> EQUALS .)


state 138

    (72) comp_operator -> NOTEQUALS .

    IDENTIFIER      reduce using rule 72 (comp_operator -> NOTEQUALS .)
    NUMBER          reduce using rule 72 (comp_operator -> NOTEQUALS .)
    STRING_LITERAL  reduce using rule 72 (comp_operator -> NOTEQUALS .)


state 139

    (73) comp_operator -> LT .

    IDENTIFIER      reduce using rule 73 (comp_operator -> LT .)
    NUMBER          reduce using rule 73 (comp_operator -> LT .)
    STRING_LITERAL  reduce using rule 73 (comp_operator -> LT .)


state 140

    (74) comp_operator -> GT .

    IDENTIFIER      reduce using rule 74 (comp_operator -> GT .)
    NUMBER          reduce using rule 74 (comp_operator -> GT .)
    STRING_LITERAL  reduce using rule 74 (comp_operator -> GT .)


state 141

    (75) comp_operator -> LE .

    IDENTIFIER      reduce using rule 75 (comp_operator -> LE .)
    NUMBER          reduce using rule 75 (comp_operator -> LE .)
    STRING_LITERAL  reduce using rule 75 (comp_operator -> LE .)


state 142

    (76) comp_operator -> GE .

    IDENTIFIER      reduce using rule 76 (comp_operator -> GE .)
    NUMBER          reduce using rule 76 (comp_operator -> GE .)
    STRING_LITERAL  reduce using rule 76 (comp_operator -> GE .)


state 143

    (16) column_def -> IDENTIFIER INTEGER primary_key_opt .

    COMMA           reduce using rule 16 (column_def -> IDENTIFIER INTEGER primary_key_opt .)
    RPAREN          reduce using rule 16 (column_def -> IDENTIFIER INTEGER primary_key_opt .)


state 144

    (19) primary_key_opt -> PRIMARY . KEY

    KEY             shift and go to state 163


state 145

    (17) column_def -> IDENTIFIER STRING primary_key_opt .

    COMMA           reduce using rule 17 (column_def -> IDENTIFIER STRING primary_key_opt .)
    RPAREN          reduce using rule 17 (column_def -> IDENTIFIER STRING primary_key_opt .)


state 146

    (15) column_def_list -> column_def COMMA column_def_list .

    RPAREN          reduce using rule 15 (column_def_list -> column_def COMMA column_def_list .)


state 147

    (21) foreign_key_def -> FOREIGN KEY LPAREN . IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 164


state 148

    (23) create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .

    $end            reduce using rule 23 (create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 149

    (24) drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .

    $end            reduce using rule 24 (drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 150

    (25) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt . order_by_clause_opt having_clause_opt
    (26) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt . order_by_clause_opt having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt . order_by_clause_opt having_clause_opt limit_clause offset_clause
    (80) order_by_clause_opt -> . ORDER BY order_list
    (81) order_by_clause_opt -> .

    ORDER           shift and go to state 166
    HAVING          reduce using rule 81 (order_by_clause_opt -> .)
    LIMIT           reduce using rule 81 (order_by_clause_opt -> .)
    $end            reduce using rule 81 (order_by_clause_opt -> .)

    order_by_clause_opt            shift and go to state 165

state 151

    (58) group_by_clause_opt -> GROUP . BY column_list

    BY              shift and go to state 167


state 152

    (53) join_clause -> JOIN IDENTIFIER IDENTIFIER . ON join_condition

    ON              shift and go to state 168


state 153

    (52) join_clause -> JOIN IDENTIFIER ON . join_condition
    (55) join_condition -> . IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 169

    join_condition                 shift and go to state 170

state 154

    (54) join_clause -> JOIN IDENTIFIER AS . IDENTIFIER ON join_condition

    IDENTIFIER      shift and go to state 171


state 155

    (92) insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN .

    $end            reduce using rule 92 (insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN .)


state 156

    (94) value_list -> expression COMMA . value_list
    (93) value_list -> . expression
    (94) value_list -> . expression COMMA value_list
    (77) expression -> . IDENTIFIER
    (78) expression -> . NUMBER
    (79) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 124
    NUMBER          shift and go to state 127
    STRING_LITERAL  shift and go to state 128

    expression                     shift and go to state 126
    value_list                     shift and go to state 172

state 157

    (62) condition -> condition AND condition .
    (62) condition -> condition . AND condition
    (63) condition -> condition . OR condition

    AND             reduce using rule 62 (condition -> condition AND condition .)
    OR              reduce using rule 62 (condition -> condition AND condition .)
    $end            reduce using rule 62 (condition -> condition AND condition .)
    GROUP           reduce using rule 62 (condition -> condition AND condition .)
    ORDER           reduce using rule 62 (condition -> condition AND condition .)
    HAVING          reduce using rule 62 (condition -> condition AND condition .)
    LIMIT           reduce using rule 62 (condition -> condition AND condition .)
    RPAREN          reduce using rule 62 (condition -> condition AND condition .)

  ! AND             [ shift and go to state 131 ]
  ! OR              [ shift and go to state 132 ]


state 158

    (63) condition -> condition OR condition .
    (62) condition -> condition . AND condition
    (63) condition -> condition . OR condition

    OR              reduce using rule 63 (condition -> condition OR condition .)
    $end            reduce using rule 63 (condition -> condition OR condition .)
    GROUP           reduce using rule 63 (condition -> condition OR condition .)
    ORDER           reduce using rule 63 (condition -> condition OR condition .)
    HAVING          reduce using rule 63 (condition -> condition OR condition .)
    LIMIT           reduce using rule 63 (condition -> condition OR condition .)
    RPAREN          reduce using rule 63 (condition -> condition OR condition .)
    AND             shift and go to state 131

  ! AND             [ reduce using rule 63 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 132 ]


state 159

    (64) condition -> LPAREN condition RPAREN .

    AND             reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    $end            reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    GROUP           reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    ORDER           reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    HAVING          reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    LIMIT           reduce using rule 64 (condition -> LPAREN condition RPAREN .)
    RPAREN          reduce using rule 64 (condition -> LPAREN condition RPAREN .)


state 160

    (69) comparison -> IDENTIFIER comp_operator expression .

    AND             reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    OR              reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    $end            reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    GROUP           reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    ORDER           reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    HAVING          reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    LIMIT           reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)
    RPAREN          reduce using rule 69 (comparison -> IDENTIFIER comp_operator expression .)


state 161

    (70) comparison -> IDENTIFIER DOT IDENTIFIER . comp_operator expression
    (68) subquery_condition -> IDENTIFIER DOT IDENTIFIER . IN LPAREN subquery RPAREN
    (71) comp_operator -> . EQUALS
    (72) comp_operator -> . NOTEQUALS
    (73) comp_operator -> . LT
    (74) comp_operator -> . GT
    (75) comp_operator -> . LE
    (76) comp_operator -> . GE

    IN              shift and go to state 174
    EQUALS          shift and go to state 137
    NOTEQUALS       shift and go to state 138
    LT              shift and go to state 139
    GT              shift and go to state 140
    LE              shift and go to state 141
    GE              shift and go to state 142

    comp_operator                  shift and go to state 173

state 162

    (67) subquery_condition -> IDENTIFIER IN LPAREN . subquery RPAREN
    (60) subquery -> . SELECT select_list FROM table_reference where_clause_opt

    SELECT          shift and go to state 176

    subquery                       shift and go to state 175

state 163

    (19) primary_key_opt -> PRIMARY KEY .

    COMMA           reduce using rule 19 (primary_key_opt -> PRIMARY KEY .)
    RPAREN          reduce using rule 19 (primary_key_opt -> PRIMARY KEY .)


state 164

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER . RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    RPAREN          shift and go to state 177


state 165

    (25) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt . having_clause_opt
    (26) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt . having_clause_opt limit_clause
    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt . having_clause_opt limit_clause offset_clause
    (87) having_clause_opt -> . HAVING condition
    (88) having_clause_opt -> .

    HAVING          shift and go to state 179
    LIMIT           reduce using rule 88 (having_clause_opt -> .)
    $end            reduce using rule 88 (having_clause_opt -> .)

    having_clause_opt              shift and go to state 178

state 166

    (80) order_by_clause_opt -> ORDER . BY order_list

    BY              shift and go to state 180


state 167

    (58) group_by_clause_opt -> GROUP BY . column_list
    (30) column_list -> . column_item
    (31) column_list -> . column_item COMMA column_list
    (32) column_item -> . IDENTIFIER
    (33) column_item -> . IDENTIFIER DOT IDENTIFIER
    (34) column_item -> . IDENTIFIER AS IDENTIFIER
    (35) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (36) column_item -> . aggregation_function
    (37) column_item -> . aggregation_function AS IDENTIFIER
    (38) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (39) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (40) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (41) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (42) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (43) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (44) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (45) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 28
    COUNT           shift and go to state 30
    AVG             shift and go to state 31
    SUM             shift and go to state 32
    MAX             shift and go to state 33
    MIN             shift and go to state 34

    column_list                    shift and go to state 181
    column_item                    shift and go to state 27
    aggregation_function           shift and go to state 29

state 168

    (53) join_clause -> JOIN IDENTIFIER IDENTIFIER ON . join_condition
    (55) join_condition -> . IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 169

    join_condition                 shift and go to state 182

state 169

    (55) join_condition -> IDENTIFIER . DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    DOT             shift and go to state 183


state 170

    (52) join_clause -> JOIN IDENTIFIER ON join_condition .

    JOIN            reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    GROUP           reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    HAVING          reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    $end            reduce using rule 52 (join_clause -> JOIN IDENTIFIER ON join_condition .)


state 171

    (54) join_clause -> JOIN IDENTIFIER AS IDENTIFIER . ON join_condition

    ON              shift and go to state 184


state 172

    (94) value_list -> expression COMMA value_list .

    RPAREN          reduce using rule 94 (value_list -> expression COMMA value_list .)


state 173

    (70) comparison -> IDENTIFIER DOT IDENTIFIER comp_operator . expression
    (77) expression -> . IDENTIFIER
    (78) expression -> . NUMBER
    (79) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 124
    NUMBER          shift and go to state 127
    STRING_LITERAL  shift and go to state 128

    expression                     shift and go to state 185

state 174

    (68) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN . LPAREN subquery RPAREN

    LPAREN          shift and go to state 186


state 175

    (67) subquery_condition -> IDENTIFIER IN LPAREN subquery . RPAREN

    RPAREN          shift and go to state 187


state 176

    (60) subquery -> SELECT . select_list FROM table_reference where_clause_opt
    (28) select_list -> . ASTERISK
    (29) select_list -> . column_list
    (30) column_list -> . column_item
    (31) column_list -> . column_item COMMA column_list
    (32) column_item -> . IDENTIFIER
    (33) column_item -> . IDENTIFIER DOT IDENTIFIER
    (34) column_item -> . IDENTIFIER AS IDENTIFIER
    (35) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (36) column_item -> . aggregation_function
    (37) column_item -> . aggregation_function AS IDENTIFIER
    (38) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (39) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (40) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (41) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (42) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (43) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (44) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (45) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    ASTERISK        shift and go to state 25
    IDENTIFIER      shift and go to state 28
    COUNT           shift and go to state 30
    AVG             shift and go to state 31
    SUM             shift and go to state 32
    MAX             shift and go to state 33
    MIN             shift and go to state 34

    select_list                    shift and go to state 188
    column_list                    shift and go to state 26
    column_item                    shift and go to state 27
    aggregation_function           shift and go to state 29

state 177

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN . REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    REFERENCES      shift and go to state 189


state 178

    (25) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt .
    (26) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt . limit_clause
    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt . limit_clause offset_clause
    (89) limit_clause -> . LIMIT NUMBER
    (90) limit_clause -> . LIMIT NUMBER OFFSET NUMBER

    $end            reduce using rule 25 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt .)
    LIMIT           shift and go to state 191

    limit_clause                   shift and go to state 190

state 179

    (87) having_clause_opt -> HAVING . condition
    (61) condition -> . simple_condition
    (62) condition -> . condition AND condition
    (63) condition -> . condition OR condition
    (64) condition -> . LPAREN condition RPAREN
    (65) simple_condition -> . comparison
    (66) simple_condition -> . subquery_condition
    (69) comparison -> . IDENTIFIER comp_operator expression
    (70) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (67) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (68) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 108
    IDENTIFIER      shift and go to state 111

    condition                      shift and go to state 192
    simple_condition               shift and go to state 107
    comparison                     shift and go to state 109
    subquery_condition             shift and go to state 110

state 180

    (80) order_by_clause_opt -> ORDER BY . order_list
    (82) order_list -> . order_item
    (83) order_list -> . order_item COMMA order_list
    (84) order_item -> . IDENTIFIER
    (85) order_item -> . IDENTIFIER ASC
    (86) order_item -> . IDENTIFIER DESC

    IDENTIFIER      shift and go to state 195

    order_list                     shift and go to state 193
    order_item                     shift and go to state 194

state 181

    (58) group_by_clause_opt -> GROUP BY column_list .

    ORDER           reduce using rule 58 (group_by_clause_opt -> GROUP BY column_list .)
    HAVING          reduce using rule 58 (group_by_clause_opt -> GROUP BY column_list .)
    LIMIT           reduce using rule 58 (group_by_clause_opt -> GROUP BY column_list .)
    $end            reduce using rule 58 (group_by_clause_opt -> GROUP BY column_list .)


state 182

    (53) join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .

    JOIN            reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    GROUP           reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    HAVING          reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    $end            reduce using rule 53 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)


state 183

    (55) join_condition -> IDENTIFIER DOT . IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 196


state 184

    (54) join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON . join_condition
    (55) join_condition -> . IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 169

    join_condition                 shift and go to state 197

state 185

    (70) comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .

    AND             reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    OR              reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    $end            reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    GROUP           reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    ORDER           reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    HAVING          reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    LIMIT           reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    RPAREN          reduce using rule 70 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)


state 186

    (68) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN . subquery RPAREN
    (60) subquery -> . SELECT select_list FROM table_reference where_clause_opt

    SELECT          shift and go to state 176

    subquery                       shift and go to state 198

state 187

    (67) subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .

    AND             reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    OR              reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    $end            reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    GROUP           reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    ORDER           reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    HAVING          reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    LIMIT           reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    RPAREN          reduce using rule 67 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)


state 188

    (60) subquery -> SELECT select_list . FROM table_reference where_clause_opt

    FROM            shift and go to state 199


state 189

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES . IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 200


state 190

    (26) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause .
    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause . offset_clause
    (91) offset_clause -> . OFFSET NUMBER

    $end            reduce using rule 26 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause .)
    OFFSET          shift and go to state 202

    offset_clause                  shift and go to state 201

state 191

    (89) limit_clause -> LIMIT . NUMBER
    (90) limit_clause -> LIMIT . NUMBER OFFSET NUMBER

    NUMBER          shift and go to state 203


state 192

    (87) having_clause_opt -> HAVING condition .
    (62) condition -> condition . AND condition
    (63) condition -> condition . OR condition

    LIMIT           reduce using rule 87 (having_clause_opt -> HAVING condition .)
    $end            reduce using rule 87 (having_clause_opt -> HAVING condition .)
    AND             shift and go to state 131
    OR              shift and go to state 132


state 193

    (80) order_by_clause_opt -> ORDER BY order_list .

    HAVING          reduce using rule 80 (order_by_clause_opt -> ORDER BY order_list .)
    LIMIT           reduce using rule 80 (order_by_clause_opt -> ORDER BY order_list .)
    $end            reduce using rule 80 (order_by_clause_opt -> ORDER BY order_list .)


state 194

    (82) order_list -> order_item .
    (83) order_list -> order_item . COMMA order_list

    HAVING          reduce using rule 82 (order_list -> order_item .)
    LIMIT           reduce using rule 82 (order_list -> order_item .)
    $end            reduce using rule 82 (order_list -> order_item .)
    COMMA           shift and go to state 204


state 195

    (84) order_item -> IDENTIFIER .
    (85) order_item -> IDENTIFIER . ASC
    (86) order_item -> IDENTIFIER . DESC

    COMMA           reduce using rule 84 (order_item -> IDENTIFIER .)
    HAVING          reduce using rule 84 (order_item -> IDENTIFIER .)
    LIMIT           reduce using rule 84 (order_item -> IDENTIFIER .)
    $end            reduce using rule 84 (order_item -> IDENTIFIER .)
    ASC             shift and go to state 205
    DESC            shift and go to state 206


state 196

    (55) join_condition -> IDENTIFIER DOT IDENTIFIER . EQUALS IDENTIFIER DOT IDENTIFIER

    EQUALS          shift and go to state 207


state 197

    (54) join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .

    JOIN            reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    GROUP           reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    HAVING          reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    $end            reduce using rule 54 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)


state 198

    (68) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery . RPAREN

    RPAREN          shift and go to state 208


state 199

    (60) subquery -> SELECT select_list FROM . table_reference where_clause_opt
    (46) table_reference -> . IDENTIFIER
    (47) table_reference -> . IDENTIFIER IDENTIFIER
    (48) table_reference -> . IDENTIFIER AS IDENTIFIER

    IDENTIFIER      shift and go to state 62

    table_reference                shift and go to state 209

state 200

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 210


state 201

    (27) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause .

    $end            reduce using rule 27 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause .)


state 202

    (91) offset_clause -> OFFSET . NUMBER

    NUMBER          shift and go to state 211


state 203

    (89) limit_clause -> LIMIT NUMBER .
    (90) limit_clause -> LIMIT NUMBER . OFFSET NUMBER

  ! shift/reduce conflict for OFFSET resolved as shift
    $end            reduce using rule 89 (limit_clause -> LIMIT NUMBER .)
    OFFSET          shift and go to state 212

  ! OFFSET          [ reduce using rule 89 (limit_clause -> LIMIT NUMBER .) ]


state 204

    (83) order_list -> order_item COMMA . order_list
    (82) order_list -> . order_item
    (83) order_list -> . order_item COMMA order_list
    (84) order_item -> . IDENTIFIER
    (85) order_item -> . IDENTIFIER ASC
    (86) order_item -> . IDENTIFIER DESC

    IDENTIFIER      shift and go to state 195

    order_item                     shift and go to state 194
    order_list                     shift and go to state 213

state 205

    (85) order_item -> IDENTIFIER ASC .

    COMMA           reduce using rule 85 (order_item -> IDENTIFIER ASC .)
    HAVING          reduce using rule 85 (order_item -> IDENTIFIER ASC .)
    LIMIT           reduce using rule 85 (order_item -> IDENTIFIER ASC .)
    $end            reduce using rule 85 (order_item -> IDENTIFIER ASC .)


state 206

    (86) order_item -> IDENTIFIER DESC .

    COMMA           reduce using rule 86 (order_item -> IDENTIFIER DESC .)
    HAVING          reduce using rule 86 (order_item -> IDENTIFIER DESC .)
    LIMIT           reduce using rule 86 (order_item -> IDENTIFIER DESC .)
    $end            reduce using rule 86 (order_item -> IDENTIFIER DESC .)


state 207

    (55) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS . IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 214


state 208

    (68) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .

    AND             reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    OR              reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    $end            reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    GROUP           reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    ORDER           reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    HAVING          reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    LIMIT           reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    RPAREN          reduce using rule 68 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)


state 209

    (60) subquery -> SELECT select_list FROM table_reference . where_clause_opt
    (56) where_clause_opt -> . WHERE condition
    (57) where_clause_opt -> .

    WHERE           shift and go to state 80
    RPAREN          reduce using rule 57 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 215

state 210

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 216


state 211

    (91) offset_clause -> OFFSET NUMBER .

    $end            reduce using rule 91 (offset_clause -> OFFSET NUMBER .)


state 212

    (90) limit_clause -> LIMIT NUMBER OFFSET . NUMBER

    NUMBER          shift and go to state 217


state 213

    (83) order_list -> order_item COMMA order_list .

    HAVING          reduce using rule 83 (order_list -> order_item COMMA order_list .)
    LIMIT           reduce using rule 83 (order_list -> order_item COMMA order_list .)
    $end            reduce using rule 83 (order_list -> order_item COMMA order_list .)


state 214

    (55) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER . DOT IDENTIFIER

    DOT             shift and go to state 218


state 215

    (60) subquery -> SELECT select_list FROM table_reference where_clause_opt .

    RPAREN          reduce using rule 60 (subquery -> SELECT select_list FROM table_reference where_clause_opt .)


state 216

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 219


state 217

    (90) limit_clause -> LIMIT NUMBER OFFSET NUMBER .

    OFFSET          reduce using rule 90 (limit_clause -> LIMIT NUMBER OFFSET NUMBER .)
    $end            reduce using rule 90 (limit_clause -> LIMIT NUMBER OFFSET NUMBER .)


state 218

    (55) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 220


state 219

    (21) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN .

    COMMA           reduce using rule 21 (foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 21 (foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 220

    (55) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .

    JOIN            reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    WHERE           reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    GROUP           reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    ORDER           reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    HAVING          reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    LIMIT           reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 55 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OFFSET in state 203 resolved as shift
WARNING: reduce/reduce conflict in state 89 resolved using rule (join_clauses_opt -> join_clause)
WARNING: rejected rule (join_clauses_opt -> <empty>) in state 89
