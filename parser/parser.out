Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SEMICOLON

Grammar

Rule 0     S' -> statement
Rule 1     statement -> create_table_statement
Rule 2     statement -> drop_table_statement
Rule 3     statement -> create_index_statement
Rule 4     statement -> drop_index_statement
Rule 5     statement -> select_statement
Rule 6     statement -> insert_statement
Rule 7     statement -> update_statement
Rule 8     statement -> delete_statement
Rule 9     statement -> show_tables_statement
Rule 10    statement -> describe_statement
Rule 11    statement -> copy_statement
Rule 12    show_tables_statement -> SHOW TABLES
Rule 13    describe_statement -> DESCRIBE IDENTIFIER
Rule 14    describe_statement -> DESCRIBE IDENTIFIER DOT IDENTIFIER
Rule 15    copy_statement -> COPY IDENTIFIER FROM STRING_LITERAL
Rule 16    copy_statement -> COPY IDENTIFIER TO STRING_LITERAL
Rule 17    create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN
Rule 18    column_def_list -> column_def
Rule 19    column_def_list -> column_def COMMA column_def_list
Rule 20    column_def -> IDENTIFIER INTEGER primary_key_opt
Rule 21    column_def -> IDENTIFIER STRING primary_key_opt
Rule 22    column_def -> foreign_key_def
Rule 23    primary_key_opt -> PRIMARY KEY
Rule 24    primary_key_opt -> PRIMARY KEY AUTO_INCREMENT
Rule 25    primary_key_opt -> PRIMARY KEY NOT NULL
Rule 26    primary_key_opt -> PRIMARY KEY AUTO_INCREMENT NOT NULL
Rule 27    primary_key_opt -> PRIMARY KEY NOT NULL AUTO_INCREMENT
Rule 28    primary_key_opt -> AUTO_INCREMENT
Rule 29    primary_key_opt -> AUTO_INCREMENT PRIMARY KEY
Rule 30    primary_key_opt -> AUTO_INCREMENT NOT NULL
Rule 31    primary_key_opt -> AUTO_INCREMENT PRIMARY KEY NOT NULL
Rule 32    primary_key_opt -> AUTO_INCREMENT NOT NULL PRIMARY KEY
Rule 33    primary_key_opt -> NOT NULL
Rule 34    primary_key_opt -> NOT NULL PRIMARY KEY
Rule 35    primary_key_opt -> NOT NULL AUTO_INCREMENT
Rule 36    primary_key_opt -> NOT NULL PRIMARY KEY AUTO_INCREMENT
Rule 37    primary_key_opt -> NOT NULL AUTO_INCREMENT PRIMARY KEY
Rule 38    primary_key_opt -> <empty>
Rule 39    foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 40    drop_table_statement -> DROP TABLE IDENTIFIER
Rule 41    create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 42    drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 43    select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
Rule 44    select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
Rule 45    select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
Rule 46    select_list -> ASTERISK
Rule 47    select_list -> column_list
Rule 48    column_list -> column_item
Rule 49    column_list -> column_item COMMA column_list
Rule 50    column_item -> IDENTIFIER
Rule 51    column_item -> IDENTIFIER DOT IDENTIFIER
Rule 52    column_item -> IDENTIFIER AS IDENTIFIER
Rule 53    column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
Rule 54    column_item -> aggregation_function
Rule 55    column_item -> aggregation_function AS IDENTIFIER
Rule 56    aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN
Rule 57    aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN
Rule 58    aggregation_function -> COUNT LPAREN ASTERISK RPAREN
Rule 59    aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN
Rule 60    aggregation_function -> AVG LPAREN IDENTIFIER RPAREN
Rule 61    aggregation_function -> SUM LPAREN IDENTIFIER RPAREN
Rule 62    aggregation_function -> MAX LPAREN IDENTIFIER RPAREN
Rule 63    aggregation_function -> MIN LPAREN IDENTIFIER RPAREN
Rule 64    table_reference -> IDENTIFIER
Rule 65    table_reference -> IDENTIFIER IDENTIFIER
Rule 66    table_reference -> IDENTIFIER AS IDENTIFIER
Rule 67    table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER
Rule 68    join_clauses_opt -> join_clause
Rule 69    join_clauses_opt -> join_clause join_clauses_opt
Rule 70    join_clauses_opt -> <empty>
Rule 71    join_clause -> JOIN IDENTIFIER ON join_condition
Rule 72    join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition
Rule 73    join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition
Rule 74    join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER
Rule 75    where_clause_opt -> WHERE condition
Rule 76    where_clause_opt -> <empty>
Rule 77    group_by_clause_opt -> GROUP BY column_list
Rule 78    group_by_clause_opt -> <empty>
Rule 79    subquery -> SELECT select_list FROM table_reference where_clause_opt
Rule 80    condition -> simple_condition
Rule 81    condition -> condition AND condition
Rule 82    condition -> condition OR condition
Rule 83    condition -> LPAREN condition RPAREN
Rule 84    simple_condition -> comparison
Rule 85    simple_condition -> subquery_condition
Rule 86    subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN
Rule 87    subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN
Rule 88    comparison -> IDENTIFIER comp_operator expression
Rule 89    comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression
Rule 90    comp_operator -> EQUALS
Rule 91    comp_operator -> NOTEQUALS
Rule 92    comp_operator -> LT
Rule 93    comp_operator -> GT
Rule 94    comp_operator -> LE
Rule 95    comp_operator -> GE
Rule 96    comp_operator -> LIKE
Rule 97    expression -> IDENTIFIER
Rule 98    expression -> IDENTIFIER DOT IDENTIFIER
Rule 99    expression -> NUMBER
Rule 100   expression -> STRING_LITERAL
Rule 101   order_by_clause_opt -> ORDER BY order_list
Rule 102   order_by_clause_opt -> <empty>
Rule 103   order_list -> order_item
Rule 104   order_list -> order_item COMMA order_list
Rule 105   order_item -> IDENTIFIER
Rule 106   order_item -> IDENTIFIER ASC
Rule 107   order_item -> IDENTIFIER DESC
Rule 108   order_item -> IDENTIFIER DOT IDENTIFIER
Rule 109   order_item -> IDENTIFIER DOT IDENTIFIER ASC
Rule 110   order_item -> IDENTIFIER DOT IDENTIFIER DESC
Rule 111   having_clause_opt -> HAVING condition
Rule 112   having_clause_opt -> <empty>
Rule 113   limit_clause -> LIMIT NUMBER
Rule 114   limit_clause -> LIMIT NUMBER OFFSET NUMBER
Rule 115   offset_clause -> OFFSET NUMBER
Rule 116   insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN
Rule 117   insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN
Rule 118   value_list -> expression
Rule 119   value_list -> expression COMMA value_list
Rule 120   update_statement -> UPDATE IDENTIFIER SET set_list where_clause_opt
Rule 121   set_list -> set_item
Rule 122   set_list -> set_item COMMA set_list
Rule 123   set_item -> IDENTIFIER EQUALS expression
Rule 124   delete_statement -> DELETE FROM IDENTIFIER where_clause_opt

Terminals, with rules where they appear

AND                  : 81
AS                   : 52 53 55 66 67 73
ASC                  : 106 109
ASTERISK             : 46 57 58
AUTO_INCREMENT       : 24 26 27 28 29 30 31 32 35 36 37
AVG                  : 60
BY                   : 77 101
COMMA                : 19 49 104 119 122
COPY                 : 15 16
COUNT                : 58 59
CREATE               : 17 41
DELETE               : 124
DESC                 : 107 110
DESCRIBE             : 13 14
DOT                  : 14 51 53 74 74 87 89 98 108 109 110
DROP                 : 40 42
EQUALS               : 74 90 123
FOREIGN              : 39
FROM                 : 15 43 44 45 79 124
GE                   : 95
GROUP                : 77
GT                   : 93
HAVING               : 111
IDENTIFIER           : 13 14 14 15 16 17 20 21 39 39 39 40 41 41 42 42 50 51 51 52 52 53 53 53 55 56 56 57 59 60 61 62 63 64 65 65 66 66 67 71 72 72 73 73 74 74 74 74 86 87 87 88 89 89 97 98 98 105 106 107 108 108 109 109 110 110 116 117 120 123 124
IN                   : 86 87
INDEX                : 41 42
INSERT               : 116 117
INTEGER              : 20
INTO                 : 116 117
JOIN                 : 71 72 73
KEY                  : 23 24 25 26 27 29 31 32 34 36 37 39
LE                   : 94
LIKE                 : 96
LIMIT                : 113 114
LPAREN               : 17 39 39 41 42 56 57 58 59 60 61 62 63 67 83 86 87 116 117 117
LT                   : 92
MAX                  : 62
MIN                  : 63
NOT                  : 25 26 27 30 31 32 33 34 35 36 37
NOTEQUALS            : 91
NULL                 : 25 26 27 30 31 32 33 34 35 36 37
NUMBER               : 99 113 114 114 115
OFFSET               : 114 115
ON                   : 41 42 71 72 73
OR                   : 82
ORDER                : 101
PRIMARY              : 23 24 25 26 27 29 31 32 34 36 37
REFERENCES           : 39
RPAREN               : 17 39 39 41 42 56 57 58 59 60 61 62 63 67 83 86 87 116 117 117
SELECT               : 43 44 45 79
SEMICOLON            : 
SET                  : 120
SHOW                 : 12
STRING               : 21
STRING_LITERAL       : 15 16 100
SUM                  : 61
TABLE                : 17 40
TABLES               : 12
TO                   : 16
UPDATE               : 120
VALUES               : 116 117
WHERE                : 75
error                : 

Nonterminals, with rules where they appear

aggregation_function : 54 55
column_def           : 18 19
column_def_list      : 17 19
column_item          : 48 49
column_list          : 47 49 77 117
comp_operator        : 88 89
comparison           : 84
condition            : 75 81 81 82 82 83 111
copy_statement       : 11
create_index_statement : 3
create_table_statement : 1
delete_statement     : 8
describe_statement   : 10
drop_index_statement : 4
drop_table_statement : 2
expression           : 88 89 118 119 123
foreign_key_def      : 22
group_by_clause_opt  : 43 44 45
having_clause_opt    : 43 44 45
insert_statement     : 6
join_clause          : 68 69
join_clauses_opt     : 43 44 45 69
join_condition       : 71 72 73
limit_clause         : 44 45
offset_clause        : 45
order_by_clause_opt  : 43 44 45
order_item           : 103 104
order_list           : 101 104
primary_key_opt      : 20 21
select_list          : 43 44 45 79
select_statement     : 5 67
set_item             : 121 122
set_list             : 120 122
show_tables_statement : 9
simple_condition     : 80
statement            : 0
subquery             : 86 87
subquery_condition   : 85
table_reference      : 43 44 45 79
update_statement     : 7
value_list           : 116 117 119
where_clause_opt     : 43 44 45 79 120 124

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . create_table_statement
    (2) statement -> . drop_table_statement
    (3) statement -> . create_index_statement
    (4) statement -> . drop_index_statement
    (5) statement -> . select_statement
    (6) statement -> . insert_statement
    (7) statement -> . update_statement
    (8) statement -> . delete_statement
    (9) statement -> . show_tables_statement
    (10) statement -> . describe_statement
    (11) statement -> . copy_statement
    (17) create_table_statement -> . CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN
    (40) drop_table_statement -> . DROP TABLE IDENTIFIER
    (41) create_index_statement -> . CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
    (42) drop_index_statement -> . DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN
    (43) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (116) insert_statement -> . INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN
    (117) insert_statement -> . INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN
    (120) update_statement -> . UPDATE IDENTIFIER SET set_list where_clause_opt
    (124) delete_statement -> . DELETE FROM IDENTIFIER where_clause_opt
    (12) show_tables_statement -> . SHOW TABLES
    (13) describe_statement -> . DESCRIBE IDENTIFIER
    (14) describe_statement -> . DESCRIBE IDENTIFIER DOT IDENTIFIER
    (15) copy_statement -> . COPY IDENTIFIER FROM STRING_LITERAL
    (16) copy_statement -> . COPY IDENTIFIER TO STRING_LITERAL

    CREATE          shift and go to state 13
    DROP            shift and go to state 14
    SELECT          shift and go to state 15
    INSERT          shift and go to state 16
    UPDATE          shift and go to state 17
    DELETE          shift and go to state 18
    SHOW            shift and go to state 19
    DESCRIBE        shift and go to state 20
    COPY            shift and go to state 21

    statement                      shift and go to state 1
    create_table_statement         shift and go to state 2
    drop_table_statement           shift and go to state 3
    create_index_statement         shift and go to state 4
    drop_index_statement           shift and go to state 5
    select_statement               shift and go to state 6
    insert_statement               shift and go to state 7
    update_statement               shift and go to state 8
    delete_statement               shift and go to state 9
    show_tables_statement          shift and go to state 10
    describe_statement             shift and go to state 11
    copy_statement                 shift and go to state 12

state 1

    (0) S' -> statement .



state 2

    (1) statement -> create_table_statement .

    $end            reduce using rule 1 (statement -> create_table_statement .)


state 3

    (2) statement -> drop_table_statement .

    $end            reduce using rule 2 (statement -> drop_table_statement .)


state 4

    (3) statement -> create_index_statement .

    $end            reduce using rule 3 (statement -> create_index_statement .)


state 5

    (4) statement -> drop_index_statement .

    $end            reduce using rule 4 (statement -> drop_index_statement .)


state 6

    (5) statement -> select_statement .

    $end            reduce using rule 5 (statement -> select_statement .)


state 7

    (6) statement -> insert_statement .

    $end            reduce using rule 6 (statement -> insert_statement .)


state 8

    (7) statement -> update_statement .

    $end            reduce using rule 7 (statement -> update_statement .)


state 9

    (8) statement -> delete_statement .

    $end            reduce using rule 8 (statement -> delete_statement .)


state 10

    (9) statement -> show_tables_statement .

    $end            reduce using rule 9 (statement -> show_tables_statement .)


state 11

    (10) statement -> describe_statement .

    $end            reduce using rule 10 (statement -> describe_statement .)


state 12

    (11) statement -> copy_statement .

    $end            reduce using rule 11 (statement -> copy_statement .)


state 13

    (17) create_table_statement -> CREATE . TABLE IDENTIFIER LPAREN column_def_list RPAREN
    (41) create_index_statement -> CREATE . INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    TABLE           shift and go to state 22
    INDEX           shift and go to state 23


state 14

    (40) drop_table_statement -> DROP . TABLE IDENTIFIER
    (42) drop_index_statement -> DROP . INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    TABLE           shift and go to state 24
    INDEX           shift and go to state 25


state 15

    (43) select_statement -> SELECT . select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT . select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT . select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (46) select_list -> . ASTERISK
    (47) select_list -> . column_list
    (48) column_list -> . column_item
    (49) column_list -> . column_item COMMA column_list
    (50) column_item -> . IDENTIFIER
    (51) column_item -> . IDENTIFIER DOT IDENTIFIER
    (52) column_item -> . IDENTIFIER AS IDENTIFIER
    (53) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (54) column_item -> . aggregation_function
    (55) column_item -> . aggregation_function AS IDENTIFIER
    (56) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (57) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (58) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (59) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (60) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (61) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (62) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (63) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    ASTERISK        shift and go to state 27
    IDENTIFIER      shift and go to state 30
    COUNT           shift and go to state 32
    AVG             shift and go to state 33
    SUM             shift and go to state 34
    MAX             shift and go to state 35
    MIN             shift and go to state 36

    select_list                    shift and go to state 26
    column_list                    shift and go to state 28
    column_item                    shift and go to state 29
    aggregation_function           shift and go to state 31

state 16

    (116) insert_statement -> INSERT . INTO IDENTIFIER VALUES LPAREN value_list RPAREN
    (117) insert_statement -> INSERT . INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN

    INTO            shift and go to state 37


state 17

    (120) update_statement -> UPDATE . IDENTIFIER SET set_list where_clause_opt

    IDENTIFIER      shift and go to state 38


state 18

    (124) delete_statement -> DELETE . FROM IDENTIFIER where_clause_opt

    FROM            shift and go to state 39


state 19

    (12) show_tables_statement -> SHOW . TABLES

    TABLES          shift and go to state 40


state 20

    (13) describe_statement -> DESCRIBE . IDENTIFIER
    (14) describe_statement -> DESCRIBE . IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 41


state 21

    (15) copy_statement -> COPY . IDENTIFIER FROM STRING_LITERAL
    (16) copy_statement -> COPY . IDENTIFIER TO STRING_LITERAL

    IDENTIFIER      shift and go to state 42


state 22

    (17) create_table_statement -> CREATE TABLE . IDENTIFIER LPAREN column_def_list RPAREN

    IDENTIFIER      shift and go to state 43


state 23

    (41) create_index_statement -> CREATE INDEX . ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    ON              shift and go to state 44


state 24

    (40) drop_table_statement -> DROP TABLE . IDENTIFIER

    IDENTIFIER      shift and go to state 45


state 25

    (42) drop_index_statement -> DROP INDEX . ON IDENTIFIER LPAREN IDENTIFIER RPAREN

    ON              shift and go to state 46


state 26

    (43) select_statement -> SELECT select_list . FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT select_list . FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list . FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause

    FROM            shift and go to state 47


state 27

    (46) select_list -> ASTERISK .

    FROM            reduce using rule 46 (select_list -> ASTERISK .)


state 28

    (47) select_list -> column_list .

    FROM            reduce using rule 47 (select_list -> column_list .)


state 29

    (48) column_list -> column_item .
    (49) column_list -> column_item . COMMA column_list

    FROM            reduce using rule 48 (column_list -> column_item .)
    RPAREN          reduce using rule 48 (column_list -> column_item .)
    ORDER           reduce using rule 48 (column_list -> column_item .)
    HAVING          reduce using rule 48 (column_list -> column_item .)
    LIMIT           reduce using rule 48 (column_list -> column_item .)
    $end            reduce using rule 48 (column_list -> column_item .)
    COMMA           shift and go to state 48


state 30

    (50) column_item -> IDENTIFIER .
    (51) column_item -> IDENTIFIER . DOT IDENTIFIER
    (52) column_item -> IDENTIFIER . AS IDENTIFIER
    (53) column_item -> IDENTIFIER . DOT IDENTIFIER AS IDENTIFIER
    (56) aggregation_function -> IDENTIFIER . LPAREN IDENTIFIER RPAREN
    (57) aggregation_function -> IDENTIFIER . LPAREN ASTERISK RPAREN

    COMMA           reduce using rule 50 (column_item -> IDENTIFIER .)
    FROM            reduce using rule 50 (column_item -> IDENTIFIER .)
    RPAREN          reduce using rule 50 (column_item -> IDENTIFIER .)
    ORDER           reduce using rule 50 (column_item -> IDENTIFIER .)
    HAVING          reduce using rule 50 (column_item -> IDENTIFIER .)
    LIMIT           reduce using rule 50 (column_item -> IDENTIFIER .)
    $end            reduce using rule 50 (column_item -> IDENTIFIER .)
    DOT             shift and go to state 49
    AS              shift and go to state 50
    LPAREN          shift and go to state 51


state 31

    (54) column_item -> aggregation_function .
    (55) column_item -> aggregation_function . AS IDENTIFIER

    COMMA           reduce using rule 54 (column_item -> aggregation_function .)
    FROM            reduce using rule 54 (column_item -> aggregation_function .)
    RPAREN          reduce using rule 54 (column_item -> aggregation_function .)
    ORDER           reduce using rule 54 (column_item -> aggregation_function .)
    HAVING          reduce using rule 54 (column_item -> aggregation_function .)
    LIMIT           reduce using rule 54 (column_item -> aggregation_function .)
    $end            reduce using rule 54 (column_item -> aggregation_function .)
    AS              shift and go to state 52


state 32

    (58) aggregation_function -> COUNT . LPAREN ASTERISK RPAREN
    (59) aggregation_function -> COUNT . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 53


state 33

    (60) aggregation_function -> AVG . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 54


state 34

    (61) aggregation_function -> SUM . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 55


state 35

    (62) aggregation_function -> MAX . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 56


state 36

    (63) aggregation_function -> MIN . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 57


state 37

    (116) insert_statement -> INSERT INTO . IDENTIFIER VALUES LPAREN value_list RPAREN
    (117) insert_statement -> INSERT INTO . IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN

    IDENTIFIER      shift and go to state 58


state 38

    (120) update_statement -> UPDATE IDENTIFIER . SET set_list where_clause_opt

    SET             shift and go to state 59


state 39

    (124) delete_statement -> DELETE FROM . IDENTIFIER where_clause_opt

    IDENTIFIER      shift and go to state 60


state 40

    (12) show_tables_statement -> SHOW TABLES .

    $end            reduce using rule 12 (show_tables_statement -> SHOW TABLES .)


state 41

    (13) describe_statement -> DESCRIBE IDENTIFIER .
    (14) describe_statement -> DESCRIBE IDENTIFIER . DOT IDENTIFIER

    $end            reduce using rule 13 (describe_statement -> DESCRIBE IDENTIFIER .)
    DOT             shift and go to state 61


state 42

    (15) copy_statement -> COPY IDENTIFIER . FROM STRING_LITERAL
    (16) copy_statement -> COPY IDENTIFIER . TO STRING_LITERAL

    FROM            shift and go to state 62
    TO              shift and go to state 63


state 43

    (17) create_table_statement -> CREATE TABLE IDENTIFIER . LPAREN column_def_list RPAREN

    LPAREN          shift and go to state 64


state 44

    (41) create_index_statement -> CREATE INDEX ON . IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 65


state 45

    (40) drop_table_statement -> DROP TABLE IDENTIFIER .

    $end            reduce using rule 40 (drop_table_statement -> DROP TABLE IDENTIFIER .)


state 46

    (42) drop_index_statement -> DROP INDEX ON . IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 66


state 47

    (43) select_statement -> SELECT select_list FROM . table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT select_list FROM . table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list FROM . table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (64) table_reference -> . IDENTIFIER
    (65) table_reference -> . IDENTIFIER IDENTIFIER
    (66) table_reference -> . IDENTIFIER AS IDENTIFIER
    (67) table_reference -> . LPAREN select_statement RPAREN AS IDENTIFIER

    IDENTIFIER      shift and go to state 68
    LPAREN          shift and go to state 69

    table_reference                shift and go to state 67

state 48

    (49) column_list -> column_item COMMA . column_list
    (48) column_list -> . column_item
    (49) column_list -> . column_item COMMA column_list
    (50) column_item -> . IDENTIFIER
    (51) column_item -> . IDENTIFIER DOT IDENTIFIER
    (52) column_item -> . IDENTIFIER AS IDENTIFIER
    (53) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (54) column_item -> . aggregation_function
    (55) column_item -> . aggregation_function AS IDENTIFIER
    (56) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (57) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (58) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (59) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (60) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (61) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (62) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (63) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 30
    COUNT           shift and go to state 32
    AVG             shift and go to state 33
    SUM             shift and go to state 34
    MAX             shift and go to state 35
    MIN             shift and go to state 36

    column_item                    shift and go to state 29
    column_list                    shift and go to state 70
    aggregation_function           shift and go to state 31

state 49

    (51) column_item -> IDENTIFIER DOT . IDENTIFIER
    (53) column_item -> IDENTIFIER DOT . IDENTIFIER AS IDENTIFIER

    IDENTIFIER      shift and go to state 71


state 50

    (52) column_item -> IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 72


state 51

    (56) aggregation_function -> IDENTIFIER LPAREN . IDENTIFIER RPAREN
    (57) aggregation_function -> IDENTIFIER LPAREN . ASTERISK RPAREN

    IDENTIFIER      shift and go to state 73
    ASTERISK        shift and go to state 74


state 52

    (55) column_item -> aggregation_function AS . IDENTIFIER

    IDENTIFIER      shift and go to state 75


state 53

    (58) aggregation_function -> COUNT LPAREN . ASTERISK RPAREN
    (59) aggregation_function -> COUNT LPAREN . IDENTIFIER RPAREN

    ASTERISK        shift and go to state 76
    IDENTIFIER      shift and go to state 77


state 54

    (60) aggregation_function -> AVG LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 78


state 55

    (61) aggregation_function -> SUM LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 79


state 56

    (62) aggregation_function -> MAX LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 80


state 57

    (63) aggregation_function -> MIN LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 81


state 58

    (116) insert_statement -> INSERT INTO IDENTIFIER . VALUES LPAREN value_list RPAREN
    (117) insert_statement -> INSERT INTO IDENTIFIER . LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN

    VALUES          shift and go to state 82
    LPAREN          shift and go to state 83


state 59

    (120) update_statement -> UPDATE IDENTIFIER SET . set_list where_clause_opt
    (121) set_list -> . set_item
    (122) set_list -> . set_item COMMA set_list
    (123) set_item -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 84

    set_list                       shift and go to state 85
    set_item                       shift and go to state 86

state 60

    (124) delete_statement -> DELETE FROM IDENTIFIER . where_clause_opt
    (75) where_clause_opt -> . WHERE condition
    (76) where_clause_opt -> .

    WHERE           shift and go to state 88
    $end            reduce using rule 76 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 87

state 61

    (14) describe_statement -> DESCRIBE IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 89


state 62

    (15) copy_statement -> COPY IDENTIFIER FROM . STRING_LITERAL

    STRING_LITERAL  shift and go to state 90


state 63

    (16) copy_statement -> COPY IDENTIFIER TO . STRING_LITERAL

    STRING_LITERAL  shift and go to state 91


state 64

    (17) create_table_statement -> CREATE TABLE IDENTIFIER LPAREN . column_def_list RPAREN
    (18) column_def_list -> . column_def
    (19) column_def_list -> . column_def COMMA column_def_list
    (20) column_def -> . IDENTIFIER INTEGER primary_key_opt
    (21) column_def -> . IDENTIFIER STRING primary_key_opt
    (22) column_def -> . foreign_key_def
    (39) foreign_key_def -> . FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 92
    FOREIGN         shift and go to state 96

    column_def_list                shift and go to state 93
    column_def                     shift and go to state 94
    foreign_key_def                shift and go to state 95

state 65

    (41) create_index_statement -> CREATE INDEX ON IDENTIFIER . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 97


state 66

    (42) drop_index_statement -> DROP INDEX ON IDENTIFIER . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 98


state 67

    (43) select_statement -> SELECT select_list FROM table_reference . join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT select_list FROM table_reference . join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list FROM table_reference . join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (68) join_clauses_opt -> . join_clause
    (69) join_clauses_opt -> . join_clause join_clauses_opt
    (70) join_clauses_opt -> .
    (71) join_clause -> . JOIN IDENTIFIER ON join_condition
    (72) join_clause -> . JOIN IDENTIFIER IDENTIFIER ON join_condition
    (73) join_clause -> . JOIN IDENTIFIER AS IDENTIFIER ON join_condition

    WHERE           reduce using rule 70 (join_clauses_opt -> .)
    GROUP           reduce using rule 70 (join_clauses_opt -> .)
    ORDER           reduce using rule 70 (join_clauses_opt -> .)
    HAVING          reduce using rule 70 (join_clauses_opt -> .)
    LIMIT           reduce using rule 70 (join_clauses_opt -> .)
    $end            reduce using rule 70 (join_clauses_opt -> .)
    RPAREN          reduce using rule 70 (join_clauses_opt -> .)
    JOIN            shift and go to state 101

    join_clauses_opt               shift and go to state 99
    join_clause                    shift and go to state 100

state 68

    (64) table_reference -> IDENTIFIER .
    (65) table_reference -> IDENTIFIER . IDENTIFIER
    (66) table_reference -> IDENTIFIER . AS IDENTIFIER

    JOIN            reduce using rule 64 (table_reference -> IDENTIFIER .)
    WHERE           reduce using rule 64 (table_reference -> IDENTIFIER .)
    GROUP           reduce using rule 64 (table_reference -> IDENTIFIER .)
    ORDER           reduce using rule 64 (table_reference -> IDENTIFIER .)
    HAVING          reduce using rule 64 (table_reference -> IDENTIFIER .)
    LIMIT           reduce using rule 64 (table_reference -> IDENTIFIER .)
    $end            reduce using rule 64 (table_reference -> IDENTIFIER .)
    RPAREN          reduce using rule 64 (table_reference -> IDENTIFIER .)
    IDENTIFIER      shift and go to state 102
    AS              shift and go to state 103


state 69

    (67) table_reference -> LPAREN . select_statement RPAREN AS IDENTIFIER
    (43) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> . SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause

    SELECT          shift and go to state 15

    select_statement               shift and go to state 104

state 70

    (49) column_list -> column_item COMMA column_list .

    FROM            reduce using rule 49 (column_list -> column_item COMMA column_list .)
    RPAREN          reduce using rule 49 (column_list -> column_item COMMA column_list .)
    ORDER           reduce using rule 49 (column_list -> column_item COMMA column_list .)
    HAVING          reduce using rule 49 (column_list -> column_item COMMA column_list .)
    LIMIT           reduce using rule 49 (column_list -> column_item COMMA column_list .)
    $end            reduce using rule 49 (column_list -> column_item COMMA column_list .)


state 71

    (51) column_item -> IDENTIFIER DOT IDENTIFIER .
    (53) column_item -> IDENTIFIER DOT IDENTIFIER . AS IDENTIFIER

    COMMA           reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    FROM            reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    ORDER           reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    HAVING          reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    LIMIT           reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 51 (column_item -> IDENTIFIER DOT IDENTIFIER .)
    AS              shift and go to state 105


state 72

    (52) column_item -> IDENTIFIER AS IDENTIFIER .

    COMMA           reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)
    FROM            reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)
    RPAREN          reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)
    ORDER           reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)
    HAVING          reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)
    LIMIT           reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)
    $end            reduce using rule 52 (column_item -> IDENTIFIER AS IDENTIFIER .)


state 73

    (56) aggregation_function -> IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 106


state 74

    (57) aggregation_function -> IDENTIFIER LPAREN ASTERISK . RPAREN

    RPAREN          shift and go to state 107


state 75

    (55) column_item -> aggregation_function AS IDENTIFIER .

    COMMA           reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)
    FROM            reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)
    RPAREN          reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)
    ORDER           reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)
    HAVING          reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)
    LIMIT           reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)
    $end            reduce using rule 55 (column_item -> aggregation_function AS IDENTIFIER .)


state 76

    (58) aggregation_function -> COUNT LPAREN ASTERISK . RPAREN

    RPAREN          shift and go to state 108


state 77

    (59) aggregation_function -> COUNT LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 109


state 78

    (60) aggregation_function -> AVG LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 110


state 79

    (61) aggregation_function -> SUM LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 111


state 80

    (62) aggregation_function -> MAX LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 112


state 81

    (63) aggregation_function -> MIN LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 113


state 82

    (116) insert_statement -> INSERT INTO IDENTIFIER VALUES . LPAREN value_list RPAREN

    LPAREN          shift and go to state 114


state 83

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN . column_list RPAREN VALUES LPAREN value_list RPAREN
    (48) column_list -> . column_item
    (49) column_list -> . column_item COMMA column_list
    (50) column_item -> . IDENTIFIER
    (51) column_item -> . IDENTIFIER DOT IDENTIFIER
    (52) column_item -> . IDENTIFIER AS IDENTIFIER
    (53) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (54) column_item -> . aggregation_function
    (55) column_item -> . aggregation_function AS IDENTIFIER
    (56) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (57) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (58) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (59) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (60) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (61) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (62) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (63) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 30
    COUNT           shift and go to state 32
    AVG             shift and go to state 33
    SUM             shift and go to state 34
    MAX             shift and go to state 35
    MIN             shift and go to state 36

    column_list                    shift and go to state 115
    column_item                    shift and go to state 29
    aggregation_function           shift and go to state 31

state 84

    (123) set_item -> IDENTIFIER . EQUALS expression

    EQUALS          shift and go to state 116


state 85

    (120) update_statement -> UPDATE IDENTIFIER SET set_list . where_clause_opt
    (75) where_clause_opt -> . WHERE condition
    (76) where_clause_opt -> .

    WHERE           shift and go to state 88
    $end            reduce using rule 76 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 117

state 86

    (121) set_list -> set_item .
    (122) set_list -> set_item . COMMA set_list

    WHERE           reduce using rule 121 (set_list -> set_item .)
    $end            reduce using rule 121 (set_list -> set_item .)
    COMMA           shift and go to state 118


state 87

    (124) delete_statement -> DELETE FROM IDENTIFIER where_clause_opt .

    $end            reduce using rule 124 (delete_statement -> DELETE FROM IDENTIFIER where_clause_opt .)


state 88

    (75) where_clause_opt -> WHERE . condition
    (80) condition -> . simple_condition
    (81) condition -> . condition AND condition
    (82) condition -> . condition OR condition
    (83) condition -> . LPAREN condition RPAREN
    (84) simple_condition -> . comparison
    (85) simple_condition -> . subquery_condition
    (88) comparison -> . IDENTIFIER comp_operator expression
    (89) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (86) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (87) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 121
    IDENTIFIER      shift and go to state 124

    condition                      shift and go to state 119
    simple_condition               shift and go to state 120
    comparison                     shift and go to state 122
    subquery_condition             shift and go to state 123

state 89

    (14) describe_statement -> DESCRIBE IDENTIFIER DOT IDENTIFIER .

    $end            reduce using rule 14 (describe_statement -> DESCRIBE IDENTIFIER DOT IDENTIFIER .)


state 90

    (15) copy_statement -> COPY IDENTIFIER FROM STRING_LITERAL .

    $end            reduce using rule 15 (copy_statement -> COPY IDENTIFIER FROM STRING_LITERAL .)


state 91

    (16) copy_statement -> COPY IDENTIFIER TO STRING_LITERAL .

    $end            reduce using rule 16 (copy_statement -> COPY IDENTIFIER TO STRING_LITERAL .)


state 92

    (20) column_def -> IDENTIFIER . INTEGER primary_key_opt
    (21) column_def -> IDENTIFIER . STRING primary_key_opt

    INTEGER         shift and go to state 125
    STRING          shift and go to state 126


state 93

    (17) create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list . RPAREN

    RPAREN          shift and go to state 127


state 94

    (18) column_def_list -> column_def .
    (19) column_def_list -> column_def . COMMA column_def_list

    RPAREN          reduce using rule 18 (column_def_list -> column_def .)
    COMMA           shift and go to state 128


state 95

    (22) column_def -> foreign_key_def .

    COMMA           reduce using rule 22 (column_def -> foreign_key_def .)
    RPAREN          reduce using rule 22 (column_def -> foreign_key_def .)


state 96

    (39) foreign_key_def -> FOREIGN . KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    KEY             shift and go to state 129


state 97

    (41) create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 130


state 98

    (42) drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 131


state 99

    (43) select_statement -> SELECT select_list FROM table_reference join_clauses_opt . where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT select_list FROM table_reference join_clauses_opt . where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt . where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (75) where_clause_opt -> . WHERE condition
    (76) where_clause_opt -> .

    WHERE           shift and go to state 88
    GROUP           reduce using rule 76 (where_clause_opt -> .)
    ORDER           reduce using rule 76 (where_clause_opt -> .)
    HAVING          reduce using rule 76 (where_clause_opt -> .)
    LIMIT           reduce using rule 76 (where_clause_opt -> .)
    $end            reduce using rule 76 (where_clause_opt -> .)
    RPAREN          reduce using rule 76 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 132

state 100

    (68) join_clauses_opt -> join_clause .
    (69) join_clauses_opt -> join_clause . join_clauses_opt
    (68) join_clauses_opt -> . join_clause
    (69) join_clauses_opt -> . join_clause join_clauses_opt
    (70) join_clauses_opt -> .
    (71) join_clause -> . JOIN IDENTIFIER ON join_condition
    (72) join_clause -> . JOIN IDENTIFIER IDENTIFIER ON join_condition
    (73) join_clause -> . JOIN IDENTIFIER AS IDENTIFIER ON join_condition

  ! reduce/reduce conflict for WHERE resolved using rule 68 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for GROUP resolved using rule 68 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for ORDER resolved using rule 68 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for HAVING resolved using rule 68 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for LIMIT resolved using rule 68 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for $end resolved using rule 68 (join_clauses_opt -> join_clause .)
  ! reduce/reduce conflict for RPAREN resolved using rule 68 (join_clauses_opt -> join_clause .)
    WHERE           reduce using rule 68 (join_clauses_opt -> join_clause .)
    GROUP           reduce using rule 68 (join_clauses_opt -> join_clause .)
    ORDER           reduce using rule 68 (join_clauses_opt -> join_clause .)
    HAVING          reduce using rule 68 (join_clauses_opt -> join_clause .)
    LIMIT           reduce using rule 68 (join_clauses_opt -> join_clause .)
    $end            reduce using rule 68 (join_clauses_opt -> join_clause .)
    RPAREN          reduce using rule 68 (join_clauses_opt -> join_clause .)
    JOIN            shift and go to state 101

  ! WHERE           [ reduce using rule 70 (join_clauses_opt -> .) ]
  ! GROUP           [ reduce using rule 70 (join_clauses_opt -> .) ]
  ! ORDER           [ reduce using rule 70 (join_clauses_opt -> .) ]
  ! HAVING          [ reduce using rule 70 (join_clauses_opt -> .) ]
  ! LIMIT           [ reduce using rule 70 (join_clauses_opt -> .) ]
  ! $end            [ reduce using rule 70 (join_clauses_opt -> .) ]
  ! RPAREN          [ reduce using rule 70 (join_clauses_opt -> .) ]

    join_clause                    shift and go to state 100
    join_clauses_opt               shift and go to state 133

state 101

    (71) join_clause -> JOIN . IDENTIFIER ON join_condition
    (72) join_clause -> JOIN . IDENTIFIER IDENTIFIER ON join_condition
    (73) join_clause -> JOIN . IDENTIFIER AS IDENTIFIER ON join_condition

    IDENTIFIER      shift and go to state 134


state 102

    (65) table_reference -> IDENTIFIER IDENTIFIER .

    JOIN            reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    WHERE           reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    GROUP           reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    ORDER           reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    HAVING          reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    LIMIT           reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    $end            reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)
    RPAREN          reduce using rule 65 (table_reference -> IDENTIFIER IDENTIFIER .)


state 103

    (66) table_reference -> IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 135


state 104

    (67) table_reference -> LPAREN select_statement . RPAREN AS IDENTIFIER

    RPAREN          shift and go to state 136


state 105

    (53) column_item -> IDENTIFIER DOT IDENTIFIER AS . IDENTIFIER

    IDENTIFIER      shift and go to state 137


state 106

    (56) aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 56 (aggregation_function -> IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 107

    (57) aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .

    AS              reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    COMMA           reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    FROM            reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    RPAREN          reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    ORDER           reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    HAVING          reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    LIMIT           reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)
    $end            reduce using rule 57 (aggregation_function -> IDENTIFIER LPAREN ASTERISK RPAREN .)


state 108

    (58) aggregation_function -> COUNT LPAREN ASTERISK RPAREN .

    AS              reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    COMMA           reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    FROM            reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    RPAREN          reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    ORDER           reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    HAVING          reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    LIMIT           reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)
    $end            reduce using rule 58 (aggregation_function -> COUNT LPAREN ASTERISK RPAREN .)


state 109

    (59) aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 59 (aggregation_function -> COUNT LPAREN IDENTIFIER RPAREN .)


state 110

    (60) aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 60 (aggregation_function -> AVG LPAREN IDENTIFIER RPAREN .)


state 111

    (61) aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 61 (aggregation_function -> SUM LPAREN IDENTIFIER RPAREN .)


state 112

    (62) aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 62 (aggregation_function -> MAX LPAREN IDENTIFIER RPAREN .)


state 113

    (63) aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .

    AS              reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    FROM            reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    ORDER           reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    HAVING          reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    LIMIT           reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 63 (aggregation_function -> MIN LPAREN IDENTIFIER RPAREN .)


state 114

    (116) insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN . value_list RPAREN
    (118) value_list -> . expression
    (119) value_list -> . expression COMMA value_list
    (97) expression -> . IDENTIFIER
    (98) expression -> . IDENTIFIER DOT IDENTIFIER
    (99) expression -> . NUMBER
    (100) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 138
    NUMBER          shift and go to state 141
    STRING_LITERAL  shift and go to state 142

    value_list                     shift and go to state 139
    expression                     shift and go to state 140

state 115

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list . RPAREN VALUES LPAREN value_list RPAREN

    RPAREN          shift and go to state 143


state 116

    (123) set_item -> IDENTIFIER EQUALS . expression
    (97) expression -> . IDENTIFIER
    (98) expression -> . IDENTIFIER DOT IDENTIFIER
    (99) expression -> . NUMBER
    (100) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 138
    NUMBER          shift and go to state 141
    STRING_LITERAL  shift and go to state 142

    expression                     shift and go to state 144

state 117

    (120) update_statement -> UPDATE IDENTIFIER SET set_list where_clause_opt .

    $end            reduce using rule 120 (update_statement -> UPDATE IDENTIFIER SET set_list where_clause_opt .)


state 118

    (122) set_list -> set_item COMMA . set_list
    (121) set_list -> . set_item
    (122) set_list -> . set_item COMMA set_list
    (123) set_item -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 84

    set_item                       shift and go to state 86
    set_list                       shift and go to state 145

state 119

    (75) where_clause_opt -> WHERE condition .
    (81) condition -> condition . AND condition
    (82) condition -> condition . OR condition

    $end            reduce using rule 75 (where_clause_opt -> WHERE condition .)
    GROUP           reduce using rule 75 (where_clause_opt -> WHERE condition .)
    ORDER           reduce using rule 75 (where_clause_opt -> WHERE condition .)
    HAVING          reduce using rule 75 (where_clause_opt -> WHERE condition .)
    LIMIT           reduce using rule 75 (where_clause_opt -> WHERE condition .)
    RPAREN          reduce using rule 75 (where_clause_opt -> WHERE condition .)
    AND             shift and go to state 146
    OR              shift and go to state 147


state 120

    (80) condition -> simple_condition .

    AND             reduce using rule 80 (condition -> simple_condition .)
    OR              reduce using rule 80 (condition -> simple_condition .)
    $end            reduce using rule 80 (condition -> simple_condition .)
    GROUP           reduce using rule 80 (condition -> simple_condition .)
    ORDER           reduce using rule 80 (condition -> simple_condition .)
    HAVING          reduce using rule 80 (condition -> simple_condition .)
    LIMIT           reduce using rule 80 (condition -> simple_condition .)
    RPAREN          reduce using rule 80 (condition -> simple_condition .)


state 121

    (83) condition -> LPAREN . condition RPAREN
    (80) condition -> . simple_condition
    (81) condition -> . condition AND condition
    (82) condition -> . condition OR condition
    (83) condition -> . LPAREN condition RPAREN
    (84) simple_condition -> . comparison
    (85) simple_condition -> . subquery_condition
    (88) comparison -> . IDENTIFIER comp_operator expression
    (89) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (86) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (87) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 121
    IDENTIFIER      shift and go to state 124

    condition                      shift and go to state 148
    simple_condition               shift and go to state 120
    comparison                     shift and go to state 122
    subquery_condition             shift and go to state 123

state 122

    (84) simple_condition -> comparison .

    AND             reduce using rule 84 (simple_condition -> comparison .)
    OR              reduce using rule 84 (simple_condition -> comparison .)
    $end            reduce using rule 84 (simple_condition -> comparison .)
    GROUP           reduce using rule 84 (simple_condition -> comparison .)
    ORDER           reduce using rule 84 (simple_condition -> comparison .)
    HAVING          reduce using rule 84 (simple_condition -> comparison .)
    LIMIT           reduce using rule 84 (simple_condition -> comparison .)
    RPAREN          reduce using rule 84 (simple_condition -> comparison .)


state 123

    (85) simple_condition -> subquery_condition .

    AND             reduce using rule 85 (simple_condition -> subquery_condition .)
    OR              reduce using rule 85 (simple_condition -> subquery_condition .)
    $end            reduce using rule 85 (simple_condition -> subquery_condition .)
    GROUP           reduce using rule 85 (simple_condition -> subquery_condition .)
    ORDER           reduce using rule 85 (simple_condition -> subquery_condition .)
    HAVING          reduce using rule 85 (simple_condition -> subquery_condition .)
    LIMIT           reduce using rule 85 (simple_condition -> subquery_condition .)
    RPAREN          reduce using rule 85 (simple_condition -> subquery_condition .)


state 124

    (88) comparison -> IDENTIFIER . comp_operator expression
    (89) comparison -> IDENTIFIER . DOT IDENTIFIER comp_operator expression
    (86) subquery_condition -> IDENTIFIER . IN LPAREN subquery RPAREN
    (87) subquery_condition -> IDENTIFIER . DOT IDENTIFIER IN LPAREN subquery RPAREN
    (90) comp_operator -> . EQUALS
    (91) comp_operator -> . NOTEQUALS
    (92) comp_operator -> . LT
    (93) comp_operator -> . GT
    (94) comp_operator -> . LE
    (95) comp_operator -> . GE
    (96) comp_operator -> . LIKE

    DOT             shift and go to state 150
    IN              shift and go to state 151
    EQUALS          shift and go to state 152
    NOTEQUALS       shift and go to state 153
    LT              shift and go to state 154
    GT              shift and go to state 155
    LE              shift and go to state 156
    GE              shift and go to state 157
    LIKE            shift and go to state 158

    comp_operator                  shift and go to state 149

state 125

    (20) column_def -> IDENTIFIER INTEGER . primary_key_opt
    (23) primary_key_opt -> . PRIMARY KEY
    (24) primary_key_opt -> . PRIMARY KEY AUTO_INCREMENT
    (25) primary_key_opt -> . PRIMARY KEY NOT NULL
    (26) primary_key_opt -> . PRIMARY KEY AUTO_INCREMENT NOT NULL
    (27) primary_key_opt -> . PRIMARY KEY NOT NULL AUTO_INCREMENT
    (28) primary_key_opt -> . AUTO_INCREMENT
    (29) primary_key_opt -> . AUTO_INCREMENT PRIMARY KEY
    (30) primary_key_opt -> . AUTO_INCREMENT NOT NULL
    (31) primary_key_opt -> . AUTO_INCREMENT PRIMARY KEY NOT NULL
    (32) primary_key_opt -> . AUTO_INCREMENT NOT NULL PRIMARY KEY
    (33) primary_key_opt -> . NOT NULL
    (34) primary_key_opt -> . NOT NULL PRIMARY KEY
    (35) primary_key_opt -> . NOT NULL AUTO_INCREMENT
    (36) primary_key_opt -> . NOT NULL PRIMARY KEY AUTO_INCREMENT
    (37) primary_key_opt -> . NOT NULL AUTO_INCREMENT PRIMARY KEY
    (38) primary_key_opt -> .

    PRIMARY         shift and go to state 160
    AUTO_INCREMENT  shift and go to state 161
    NOT             shift and go to state 162
    COMMA           reduce using rule 38 (primary_key_opt -> .)
    RPAREN          reduce using rule 38 (primary_key_opt -> .)

    primary_key_opt                shift and go to state 159

state 126

    (21) column_def -> IDENTIFIER STRING . primary_key_opt
    (23) primary_key_opt -> . PRIMARY KEY
    (24) primary_key_opt -> . PRIMARY KEY AUTO_INCREMENT
    (25) primary_key_opt -> . PRIMARY KEY NOT NULL
    (26) primary_key_opt -> . PRIMARY KEY AUTO_INCREMENT NOT NULL
    (27) primary_key_opt -> . PRIMARY KEY NOT NULL AUTO_INCREMENT
    (28) primary_key_opt -> . AUTO_INCREMENT
    (29) primary_key_opt -> . AUTO_INCREMENT PRIMARY KEY
    (30) primary_key_opt -> . AUTO_INCREMENT NOT NULL
    (31) primary_key_opt -> . AUTO_INCREMENT PRIMARY KEY NOT NULL
    (32) primary_key_opt -> . AUTO_INCREMENT NOT NULL PRIMARY KEY
    (33) primary_key_opt -> . NOT NULL
    (34) primary_key_opt -> . NOT NULL PRIMARY KEY
    (35) primary_key_opt -> . NOT NULL AUTO_INCREMENT
    (36) primary_key_opt -> . NOT NULL PRIMARY KEY AUTO_INCREMENT
    (37) primary_key_opt -> . NOT NULL AUTO_INCREMENT PRIMARY KEY
    (38) primary_key_opt -> .

    PRIMARY         shift and go to state 160
    AUTO_INCREMENT  shift and go to state 161
    NOT             shift and go to state 162
    COMMA           reduce using rule 38 (primary_key_opt -> .)
    RPAREN          reduce using rule 38 (primary_key_opt -> .)

    primary_key_opt                shift and go to state 163

state 127

    (17) create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN .

    $end            reduce using rule 17 (create_table_statement -> CREATE TABLE IDENTIFIER LPAREN column_def_list RPAREN .)


state 128

    (19) column_def_list -> column_def COMMA . column_def_list
    (18) column_def_list -> . column_def
    (19) column_def_list -> . column_def COMMA column_def_list
    (20) column_def -> . IDENTIFIER INTEGER primary_key_opt
    (21) column_def -> . IDENTIFIER STRING primary_key_opt
    (22) column_def -> . foreign_key_def
    (39) foreign_key_def -> . FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 92
    FOREIGN         shift and go to state 96

    column_def                     shift and go to state 94
    column_def_list                shift and go to state 164
    foreign_key_def                shift and go to state 95

state 129

    (39) foreign_key_def -> FOREIGN KEY . LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 165


state 130

    (41) create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 166


state 131

    (42) drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 167


state 132

    (43) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt . group_by_clause_opt order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt . group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt . group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause
    (77) group_by_clause_opt -> . GROUP BY column_list
    (78) group_by_clause_opt -> .

    GROUP           shift and go to state 169
    ORDER           reduce using rule 78 (group_by_clause_opt -> .)
    HAVING          reduce using rule 78 (group_by_clause_opt -> .)
    LIMIT           reduce using rule 78 (group_by_clause_opt -> .)
    $end            reduce using rule 78 (group_by_clause_opt -> .)
    RPAREN          reduce using rule 78 (group_by_clause_opt -> .)

    group_by_clause_opt            shift and go to state 168

state 133

    (69) join_clauses_opt -> join_clause join_clauses_opt .

    WHERE           reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)
    GROUP           reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)
    ORDER           reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)
    HAVING          reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)
    LIMIT           reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)
    $end            reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)
    RPAREN          reduce using rule 69 (join_clauses_opt -> join_clause join_clauses_opt .)


state 134

    (71) join_clause -> JOIN IDENTIFIER . ON join_condition
    (72) join_clause -> JOIN IDENTIFIER . IDENTIFIER ON join_condition
    (73) join_clause -> JOIN IDENTIFIER . AS IDENTIFIER ON join_condition

    ON              shift and go to state 171
    IDENTIFIER      shift and go to state 170
    AS              shift and go to state 172


state 135

    (66) table_reference -> IDENTIFIER AS IDENTIFIER .

    JOIN            reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    WHERE           reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    GROUP           reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    ORDER           reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    HAVING          reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    LIMIT           reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    $end            reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)
    RPAREN          reduce using rule 66 (table_reference -> IDENTIFIER AS IDENTIFIER .)


state 136

    (67) table_reference -> LPAREN select_statement RPAREN . AS IDENTIFIER

    AS              shift and go to state 173


state 137

    (53) column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .

    COMMA           reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    FROM            reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    RPAREN          reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    ORDER           reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    HAVING          reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    LIMIT           reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)
    $end            reduce using rule 53 (column_item -> IDENTIFIER DOT IDENTIFIER AS IDENTIFIER .)


state 138

    (97) expression -> IDENTIFIER .
    (98) expression -> IDENTIFIER . DOT IDENTIFIER

    COMMA           reduce using rule 97 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 97 (expression -> IDENTIFIER .)
    WHERE           reduce using rule 97 (expression -> IDENTIFIER .)
    $end            reduce using rule 97 (expression -> IDENTIFIER .)
    AND             reduce using rule 97 (expression -> IDENTIFIER .)
    OR              reduce using rule 97 (expression -> IDENTIFIER .)
    GROUP           reduce using rule 97 (expression -> IDENTIFIER .)
    ORDER           reduce using rule 97 (expression -> IDENTIFIER .)
    HAVING          reduce using rule 97 (expression -> IDENTIFIER .)
    LIMIT           reduce using rule 97 (expression -> IDENTIFIER .)
    DOT             shift and go to state 174


state 139

    (116) insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list . RPAREN

    RPAREN          shift and go to state 175


state 140

    (118) value_list -> expression .
    (119) value_list -> expression . COMMA value_list

    RPAREN          reduce using rule 118 (value_list -> expression .)
    COMMA           shift and go to state 176


state 141

    (99) expression -> NUMBER .

    COMMA           reduce using rule 99 (expression -> NUMBER .)
    RPAREN          reduce using rule 99 (expression -> NUMBER .)
    WHERE           reduce using rule 99 (expression -> NUMBER .)
    $end            reduce using rule 99 (expression -> NUMBER .)
    AND             reduce using rule 99 (expression -> NUMBER .)
    OR              reduce using rule 99 (expression -> NUMBER .)
    GROUP           reduce using rule 99 (expression -> NUMBER .)
    ORDER           reduce using rule 99 (expression -> NUMBER .)
    HAVING          reduce using rule 99 (expression -> NUMBER .)
    LIMIT           reduce using rule 99 (expression -> NUMBER .)


state 142

    (100) expression -> STRING_LITERAL .

    COMMA           reduce using rule 100 (expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 100 (expression -> STRING_LITERAL .)
    WHERE           reduce using rule 100 (expression -> STRING_LITERAL .)
    $end            reduce using rule 100 (expression -> STRING_LITERAL .)
    AND             reduce using rule 100 (expression -> STRING_LITERAL .)
    OR              reduce using rule 100 (expression -> STRING_LITERAL .)
    GROUP           reduce using rule 100 (expression -> STRING_LITERAL .)
    ORDER           reduce using rule 100 (expression -> STRING_LITERAL .)
    HAVING          reduce using rule 100 (expression -> STRING_LITERAL .)
    LIMIT           reduce using rule 100 (expression -> STRING_LITERAL .)


state 143

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN . VALUES LPAREN value_list RPAREN

    VALUES          shift and go to state 177


state 144

    (123) set_item -> IDENTIFIER EQUALS expression .

    COMMA           reduce using rule 123 (set_item -> IDENTIFIER EQUALS expression .)
    WHERE           reduce using rule 123 (set_item -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 123 (set_item -> IDENTIFIER EQUALS expression .)


state 145

    (122) set_list -> set_item COMMA set_list .

    WHERE           reduce using rule 122 (set_list -> set_item COMMA set_list .)
    $end            reduce using rule 122 (set_list -> set_item COMMA set_list .)


state 146

    (81) condition -> condition AND . condition
    (80) condition -> . simple_condition
    (81) condition -> . condition AND condition
    (82) condition -> . condition OR condition
    (83) condition -> . LPAREN condition RPAREN
    (84) simple_condition -> . comparison
    (85) simple_condition -> . subquery_condition
    (88) comparison -> . IDENTIFIER comp_operator expression
    (89) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (86) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (87) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 121
    IDENTIFIER      shift and go to state 124

    condition                      shift and go to state 178
    simple_condition               shift and go to state 120
    comparison                     shift and go to state 122
    subquery_condition             shift and go to state 123

state 147

    (82) condition -> condition OR . condition
    (80) condition -> . simple_condition
    (81) condition -> . condition AND condition
    (82) condition -> . condition OR condition
    (83) condition -> . LPAREN condition RPAREN
    (84) simple_condition -> . comparison
    (85) simple_condition -> . subquery_condition
    (88) comparison -> . IDENTIFIER comp_operator expression
    (89) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (86) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (87) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 121
    IDENTIFIER      shift and go to state 124

    condition                      shift and go to state 179
    simple_condition               shift and go to state 120
    comparison                     shift and go to state 122
    subquery_condition             shift and go to state 123

state 148

    (83) condition -> LPAREN condition . RPAREN
    (81) condition -> condition . AND condition
    (82) condition -> condition . OR condition

    RPAREN          shift and go to state 180
    AND             shift and go to state 146
    OR              shift and go to state 147


state 149

    (88) comparison -> IDENTIFIER comp_operator . expression
    (97) expression -> . IDENTIFIER
    (98) expression -> . IDENTIFIER DOT IDENTIFIER
    (99) expression -> . NUMBER
    (100) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 138
    NUMBER          shift and go to state 141
    STRING_LITERAL  shift and go to state 142

    expression                     shift and go to state 181

state 150

    (89) comparison -> IDENTIFIER DOT . IDENTIFIER comp_operator expression
    (87) subquery_condition -> IDENTIFIER DOT . IDENTIFIER IN LPAREN subquery RPAREN

    IDENTIFIER      shift and go to state 182


state 151

    (86) subquery_condition -> IDENTIFIER IN . LPAREN subquery RPAREN

    LPAREN          shift and go to state 183


state 152

    (90) comp_operator -> EQUALS .

    IDENTIFIER      reduce using rule 90 (comp_operator -> EQUALS .)
    NUMBER          reduce using rule 90 (comp_operator -> EQUALS .)
    STRING_LITERAL  reduce using rule 90 (comp_operator -> EQUALS .)


state 153

    (91) comp_operator -> NOTEQUALS .

    IDENTIFIER      reduce using rule 91 (comp_operator -> NOTEQUALS .)
    NUMBER          reduce using rule 91 (comp_operator -> NOTEQUALS .)
    STRING_LITERAL  reduce using rule 91 (comp_operator -> NOTEQUALS .)


state 154

    (92) comp_operator -> LT .

    IDENTIFIER      reduce using rule 92 (comp_operator -> LT .)
    NUMBER          reduce using rule 92 (comp_operator -> LT .)
    STRING_LITERAL  reduce using rule 92 (comp_operator -> LT .)


state 155

    (93) comp_operator -> GT .

    IDENTIFIER      reduce using rule 93 (comp_operator -> GT .)
    NUMBER          reduce using rule 93 (comp_operator -> GT .)
    STRING_LITERAL  reduce using rule 93 (comp_operator -> GT .)


state 156

    (94) comp_operator -> LE .

    IDENTIFIER      reduce using rule 94 (comp_operator -> LE .)
    NUMBER          reduce using rule 94 (comp_operator -> LE .)
    STRING_LITERAL  reduce using rule 94 (comp_operator -> LE .)


state 157

    (95) comp_operator -> GE .

    IDENTIFIER      reduce using rule 95 (comp_operator -> GE .)
    NUMBER          reduce using rule 95 (comp_operator -> GE .)
    STRING_LITERAL  reduce using rule 95 (comp_operator -> GE .)


state 158

    (96) comp_operator -> LIKE .

    IDENTIFIER      reduce using rule 96 (comp_operator -> LIKE .)
    NUMBER          reduce using rule 96 (comp_operator -> LIKE .)
    STRING_LITERAL  reduce using rule 96 (comp_operator -> LIKE .)


state 159

    (20) column_def -> IDENTIFIER INTEGER primary_key_opt .

    COMMA           reduce using rule 20 (column_def -> IDENTIFIER INTEGER primary_key_opt .)
    RPAREN          reduce using rule 20 (column_def -> IDENTIFIER INTEGER primary_key_opt .)


state 160

    (23) primary_key_opt -> PRIMARY . KEY
    (24) primary_key_opt -> PRIMARY . KEY AUTO_INCREMENT
    (25) primary_key_opt -> PRIMARY . KEY NOT NULL
    (26) primary_key_opt -> PRIMARY . KEY AUTO_INCREMENT NOT NULL
    (27) primary_key_opt -> PRIMARY . KEY NOT NULL AUTO_INCREMENT

    KEY             shift and go to state 184


state 161

    (28) primary_key_opt -> AUTO_INCREMENT .
    (29) primary_key_opt -> AUTO_INCREMENT . PRIMARY KEY
    (30) primary_key_opt -> AUTO_INCREMENT . NOT NULL
    (31) primary_key_opt -> AUTO_INCREMENT . PRIMARY KEY NOT NULL
    (32) primary_key_opt -> AUTO_INCREMENT . NOT NULL PRIMARY KEY

    COMMA           reduce using rule 28 (primary_key_opt -> AUTO_INCREMENT .)
    RPAREN          reduce using rule 28 (primary_key_opt -> AUTO_INCREMENT .)
    PRIMARY         shift and go to state 185
    NOT             shift and go to state 186


state 162

    (33) primary_key_opt -> NOT . NULL
    (34) primary_key_opt -> NOT . NULL PRIMARY KEY
    (35) primary_key_opt -> NOT . NULL AUTO_INCREMENT
    (36) primary_key_opt -> NOT . NULL PRIMARY KEY AUTO_INCREMENT
    (37) primary_key_opt -> NOT . NULL AUTO_INCREMENT PRIMARY KEY

    NULL            shift and go to state 187


state 163

    (21) column_def -> IDENTIFIER STRING primary_key_opt .

    COMMA           reduce using rule 21 (column_def -> IDENTIFIER STRING primary_key_opt .)
    RPAREN          reduce using rule 21 (column_def -> IDENTIFIER STRING primary_key_opt .)


state 164

    (19) column_def_list -> column_def COMMA column_def_list .

    RPAREN          reduce using rule 19 (column_def_list -> column_def COMMA column_def_list .)


state 165

    (39) foreign_key_def -> FOREIGN KEY LPAREN . IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 188


state 166

    (41) create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .

    $end            reduce using rule 41 (create_index_statement -> CREATE INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 167

    (42) drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .

    $end            reduce using rule 42 (drop_index_statement -> DROP INDEX ON IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 168

    (43) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt . order_by_clause_opt having_clause_opt
    (44) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt . order_by_clause_opt having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt . order_by_clause_opt having_clause_opt limit_clause offset_clause
    (101) order_by_clause_opt -> . ORDER BY order_list
    (102) order_by_clause_opt -> .

    ORDER           shift and go to state 190
    HAVING          reduce using rule 102 (order_by_clause_opt -> .)
    LIMIT           reduce using rule 102 (order_by_clause_opt -> .)
    $end            reduce using rule 102 (order_by_clause_opt -> .)
    RPAREN          reduce using rule 102 (order_by_clause_opt -> .)

    order_by_clause_opt            shift and go to state 189

state 169

    (77) group_by_clause_opt -> GROUP . BY column_list

    BY              shift and go to state 191


state 170

    (72) join_clause -> JOIN IDENTIFIER IDENTIFIER . ON join_condition

    ON              shift and go to state 192


state 171

    (71) join_clause -> JOIN IDENTIFIER ON . join_condition
    (74) join_condition -> . IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 193

    join_condition                 shift and go to state 194

state 172

    (73) join_clause -> JOIN IDENTIFIER AS . IDENTIFIER ON join_condition

    IDENTIFIER      shift and go to state 195


state 173

    (67) table_reference -> LPAREN select_statement RPAREN AS . IDENTIFIER

    IDENTIFIER      shift and go to state 196


state 174

    (98) expression -> IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 197


state 175

    (116) insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN .

    $end            reduce using rule 116 (insert_statement -> INSERT INTO IDENTIFIER VALUES LPAREN value_list RPAREN .)


state 176

    (119) value_list -> expression COMMA . value_list
    (118) value_list -> . expression
    (119) value_list -> . expression COMMA value_list
    (97) expression -> . IDENTIFIER
    (98) expression -> . IDENTIFIER DOT IDENTIFIER
    (99) expression -> . NUMBER
    (100) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 138
    NUMBER          shift and go to state 141
    STRING_LITERAL  shift and go to state 142

    expression                     shift and go to state 140
    value_list                     shift and go to state 198

state 177

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES . LPAREN value_list RPAREN

    LPAREN          shift and go to state 199


state 178

    (81) condition -> condition AND condition .
    (81) condition -> condition . AND condition
    (82) condition -> condition . OR condition

    AND             reduce using rule 81 (condition -> condition AND condition .)
    OR              reduce using rule 81 (condition -> condition AND condition .)
    $end            reduce using rule 81 (condition -> condition AND condition .)
    GROUP           reduce using rule 81 (condition -> condition AND condition .)
    ORDER           reduce using rule 81 (condition -> condition AND condition .)
    HAVING          reduce using rule 81 (condition -> condition AND condition .)
    LIMIT           reduce using rule 81 (condition -> condition AND condition .)
    RPAREN          reduce using rule 81 (condition -> condition AND condition .)

  ! AND             [ shift and go to state 146 ]
  ! OR              [ shift and go to state 147 ]


state 179

    (82) condition -> condition OR condition .
    (81) condition -> condition . AND condition
    (82) condition -> condition . OR condition

    OR              reduce using rule 82 (condition -> condition OR condition .)
    $end            reduce using rule 82 (condition -> condition OR condition .)
    GROUP           reduce using rule 82 (condition -> condition OR condition .)
    ORDER           reduce using rule 82 (condition -> condition OR condition .)
    HAVING          reduce using rule 82 (condition -> condition OR condition .)
    LIMIT           reduce using rule 82 (condition -> condition OR condition .)
    RPAREN          reduce using rule 82 (condition -> condition OR condition .)
    AND             shift and go to state 146

  ! AND             [ reduce using rule 82 (condition -> condition OR condition .) ]
  ! OR              [ shift and go to state 147 ]


state 180

    (83) condition -> LPAREN condition RPAREN .

    AND             reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    OR              reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    $end            reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    GROUP           reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    ORDER           reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    HAVING          reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    LIMIT           reduce using rule 83 (condition -> LPAREN condition RPAREN .)
    RPAREN          reduce using rule 83 (condition -> LPAREN condition RPAREN .)


state 181

    (88) comparison -> IDENTIFIER comp_operator expression .

    AND             reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    OR              reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    $end            reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    GROUP           reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    ORDER           reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    HAVING          reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    LIMIT           reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)
    RPAREN          reduce using rule 88 (comparison -> IDENTIFIER comp_operator expression .)


state 182

    (89) comparison -> IDENTIFIER DOT IDENTIFIER . comp_operator expression
    (87) subquery_condition -> IDENTIFIER DOT IDENTIFIER . IN LPAREN subquery RPAREN
    (90) comp_operator -> . EQUALS
    (91) comp_operator -> . NOTEQUALS
    (92) comp_operator -> . LT
    (93) comp_operator -> . GT
    (94) comp_operator -> . LE
    (95) comp_operator -> . GE
    (96) comp_operator -> . LIKE

    IN              shift and go to state 201
    EQUALS          shift and go to state 152
    NOTEQUALS       shift and go to state 153
    LT              shift and go to state 154
    GT              shift and go to state 155
    LE              shift and go to state 156
    GE              shift and go to state 157
    LIKE            shift and go to state 158

    comp_operator                  shift and go to state 200

state 183

    (86) subquery_condition -> IDENTIFIER IN LPAREN . subquery RPAREN
    (79) subquery -> . SELECT select_list FROM table_reference where_clause_opt

    SELECT          shift and go to state 203

    subquery                       shift and go to state 202

state 184

    (23) primary_key_opt -> PRIMARY KEY .
    (24) primary_key_opt -> PRIMARY KEY . AUTO_INCREMENT
    (25) primary_key_opt -> PRIMARY KEY . NOT NULL
    (26) primary_key_opt -> PRIMARY KEY . AUTO_INCREMENT NOT NULL
    (27) primary_key_opt -> PRIMARY KEY . NOT NULL AUTO_INCREMENT

    COMMA           reduce using rule 23 (primary_key_opt -> PRIMARY KEY .)
    RPAREN          reduce using rule 23 (primary_key_opt -> PRIMARY KEY .)
    AUTO_INCREMENT  shift and go to state 204
    NOT             shift and go to state 205


state 185

    (29) primary_key_opt -> AUTO_INCREMENT PRIMARY . KEY
    (31) primary_key_opt -> AUTO_INCREMENT PRIMARY . KEY NOT NULL

    KEY             shift and go to state 206


state 186

    (30) primary_key_opt -> AUTO_INCREMENT NOT . NULL
    (32) primary_key_opt -> AUTO_INCREMENT NOT . NULL PRIMARY KEY

    NULL            shift and go to state 207


state 187

    (33) primary_key_opt -> NOT NULL .
    (34) primary_key_opt -> NOT NULL . PRIMARY KEY
    (35) primary_key_opt -> NOT NULL . AUTO_INCREMENT
    (36) primary_key_opt -> NOT NULL . PRIMARY KEY AUTO_INCREMENT
    (37) primary_key_opt -> NOT NULL . AUTO_INCREMENT PRIMARY KEY

    COMMA           reduce using rule 33 (primary_key_opt -> NOT NULL .)
    RPAREN          reduce using rule 33 (primary_key_opt -> NOT NULL .)
    PRIMARY         shift and go to state 208
    AUTO_INCREMENT  shift and go to state 209


state 188

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER . RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    RPAREN          shift and go to state 210


state 189

    (43) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt . having_clause_opt
    (44) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt . having_clause_opt limit_clause
    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt . having_clause_opt limit_clause offset_clause
    (111) having_clause_opt -> . HAVING condition
    (112) having_clause_opt -> .

    HAVING          shift and go to state 212
    LIMIT           reduce using rule 112 (having_clause_opt -> .)
    $end            reduce using rule 112 (having_clause_opt -> .)
    RPAREN          reduce using rule 112 (having_clause_opt -> .)

    having_clause_opt              shift and go to state 211

state 190

    (101) order_by_clause_opt -> ORDER . BY order_list

    BY              shift and go to state 213


state 191

    (77) group_by_clause_opt -> GROUP BY . column_list
    (48) column_list -> . column_item
    (49) column_list -> . column_item COMMA column_list
    (50) column_item -> . IDENTIFIER
    (51) column_item -> . IDENTIFIER DOT IDENTIFIER
    (52) column_item -> . IDENTIFIER AS IDENTIFIER
    (53) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (54) column_item -> . aggregation_function
    (55) column_item -> . aggregation_function AS IDENTIFIER
    (56) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (57) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (58) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (59) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (60) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (61) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (62) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (63) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 30
    COUNT           shift and go to state 32
    AVG             shift and go to state 33
    SUM             shift and go to state 34
    MAX             shift and go to state 35
    MIN             shift and go to state 36

    column_list                    shift and go to state 214
    column_item                    shift and go to state 29
    aggregation_function           shift and go to state 31

state 192

    (72) join_clause -> JOIN IDENTIFIER IDENTIFIER ON . join_condition
    (74) join_condition -> . IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 193

    join_condition                 shift and go to state 215

state 193

    (74) join_condition -> IDENTIFIER . DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    DOT             shift and go to state 216


state 194

    (71) join_clause -> JOIN IDENTIFIER ON join_condition .

    JOIN            reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    GROUP           reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    HAVING          reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    $end            reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)
    RPAREN          reduce using rule 71 (join_clause -> JOIN IDENTIFIER ON join_condition .)


state 195

    (73) join_clause -> JOIN IDENTIFIER AS IDENTIFIER . ON join_condition

    ON              shift and go to state 217


state 196

    (67) table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .

    JOIN            reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    WHERE           reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    GROUP           reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    ORDER           reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    HAVING          reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    LIMIT           reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    $end            reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)
    RPAREN          reduce using rule 67 (table_reference -> LPAREN select_statement RPAREN AS IDENTIFIER .)


state 197

    (98) expression -> IDENTIFIER DOT IDENTIFIER .

    COMMA           reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    WHERE           reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    GROUP           reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    ORDER           reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    HAVING          reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)
    LIMIT           reduce using rule 98 (expression -> IDENTIFIER DOT IDENTIFIER .)


state 198

    (119) value_list -> expression COMMA value_list .

    RPAREN          reduce using rule 119 (value_list -> expression COMMA value_list .)


state 199

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN . value_list RPAREN
    (118) value_list -> . expression
    (119) value_list -> . expression COMMA value_list
    (97) expression -> . IDENTIFIER
    (98) expression -> . IDENTIFIER DOT IDENTIFIER
    (99) expression -> . NUMBER
    (100) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 138
    NUMBER          shift and go to state 141
    STRING_LITERAL  shift and go to state 142

    value_list                     shift and go to state 218
    expression                     shift and go to state 140

state 200

    (89) comparison -> IDENTIFIER DOT IDENTIFIER comp_operator . expression
    (97) expression -> . IDENTIFIER
    (98) expression -> . IDENTIFIER DOT IDENTIFIER
    (99) expression -> . NUMBER
    (100) expression -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 138
    NUMBER          shift and go to state 141
    STRING_LITERAL  shift and go to state 142

    expression                     shift and go to state 219

state 201

    (87) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN . LPAREN subquery RPAREN

    LPAREN          shift and go to state 220


state 202

    (86) subquery_condition -> IDENTIFIER IN LPAREN subquery . RPAREN

    RPAREN          shift and go to state 221


state 203

    (79) subquery -> SELECT . select_list FROM table_reference where_clause_opt
    (46) select_list -> . ASTERISK
    (47) select_list -> . column_list
    (48) column_list -> . column_item
    (49) column_list -> . column_item COMMA column_list
    (50) column_item -> . IDENTIFIER
    (51) column_item -> . IDENTIFIER DOT IDENTIFIER
    (52) column_item -> . IDENTIFIER AS IDENTIFIER
    (53) column_item -> . IDENTIFIER DOT IDENTIFIER AS IDENTIFIER
    (54) column_item -> . aggregation_function
    (55) column_item -> . aggregation_function AS IDENTIFIER
    (56) aggregation_function -> . IDENTIFIER LPAREN IDENTIFIER RPAREN
    (57) aggregation_function -> . IDENTIFIER LPAREN ASTERISK RPAREN
    (58) aggregation_function -> . COUNT LPAREN ASTERISK RPAREN
    (59) aggregation_function -> . COUNT LPAREN IDENTIFIER RPAREN
    (60) aggregation_function -> . AVG LPAREN IDENTIFIER RPAREN
    (61) aggregation_function -> . SUM LPAREN IDENTIFIER RPAREN
    (62) aggregation_function -> . MAX LPAREN IDENTIFIER RPAREN
    (63) aggregation_function -> . MIN LPAREN IDENTIFIER RPAREN

    ASTERISK        shift and go to state 27
    IDENTIFIER      shift and go to state 30
    COUNT           shift and go to state 32
    AVG             shift and go to state 33
    SUM             shift and go to state 34
    MAX             shift and go to state 35
    MIN             shift and go to state 36

    select_list                    shift and go to state 222
    column_list                    shift and go to state 28
    column_item                    shift and go to state 29
    aggregation_function           shift and go to state 31

state 204

    (24) primary_key_opt -> PRIMARY KEY AUTO_INCREMENT .
    (26) primary_key_opt -> PRIMARY KEY AUTO_INCREMENT . NOT NULL

    COMMA           reduce using rule 24 (primary_key_opt -> PRIMARY KEY AUTO_INCREMENT .)
    RPAREN          reduce using rule 24 (primary_key_opt -> PRIMARY KEY AUTO_INCREMENT .)
    NOT             shift and go to state 223


state 205

    (25) primary_key_opt -> PRIMARY KEY NOT . NULL
    (27) primary_key_opt -> PRIMARY KEY NOT . NULL AUTO_INCREMENT

    NULL            shift and go to state 224


state 206

    (29) primary_key_opt -> AUTO_INCREMENT PRIMARY KEY .
    (31) primary_key_opt -> AUTO_INCREMENT PRIMARY KEY . NOT NULL

    COMMA           reduce using rule 29 (primary_key_opt -> AUTO_INCREMENT PRIMARY KEY .)
    RPAREN          reduce using rule 29 (primary_key_opt -> AUTO_INCREMENT PRIMARY KEY .)
    NOT             shift and go to state 225


state 207

    (30) primary_key_opt -> AUTO_INCREMENT NOT NULL .
    (32) primary_key_opt -> AUTO_INCREMENT NOT NULL . PRIMARY KEY

    COMMA           reduce using rule 30 (primary_key_opt -> AUTO_INCREMENT NOT NULL .)
    RPAREN          reduce using rule 30 (primary_key_opt -> AUTO_INCREMENT NOT NULL .)
    PRIMARY         shift and go to state 226


state 208

    (34) primary_key_opt -> NOT NULL PRIMARY . KEY
    (36) primary_key_opt -> NOT NULL PRIMARY . KEY AUTO_INCREMENT

    KEY             shift and go to state 227


state 209

    (35) primary_key_opt -> NOT NULL AUTO_INCREMENT .
    (37) primary_key_opt -> NOT NULL AUTO_INCREMENT . PRIMARY KEY

    COMMA           reduce using rule 35 (primary_key_opt -> NOT NULL AUTO_INCREMENT .)
    RPAREN          reduce using rule 35 (primary_key_opt -> NOT NULL AUTO_INCREMENT .)
    PRIMARY         shift and go to state 228


state 210

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN . REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN

    REFERENCES      shift and go to state 229


state 211

    (43) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt .
    (44) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt . limit_clause
    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt . limit_clause offset_clause
    (113) limit_clause -> . LIMIT NUMBER
    (114) limit_clause -> . LIMIT NUMBER OFFSET NUMBER

    $end            reduce using rule 43 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt .)
    RPAREN          reduce using rule 43 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt .)
    LIMIT           shift and go to state 231

    limit_clause                   shift and go to state 230

state 212

    (111) having_clause_opt -> HAVING . condition
    (80) condition -> . simple_condition
    (81) condition -> . condition AND condition
    (82) condition -> . condition OR condition
    (83) condition -> . LPAREN condition RPAREN
    (84) simple_condition -> . comparison
    (85) simple_condition -> . subquery_condition
    (88) comparison -> . IDENTIFIER comp_operator expression
    (89) comparison -> . IDENTIFIER DOT IDENTIFIER comp_operator expression
    (86) subquery_condition -> . IDENTIFIER IN LPAREN subquery RPAREN
    (87) subquery_condition -> . IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN

    LPAREN          shift and go to state 121
    IDENTIFIER      shift and go to state 124

    condition                      shift and go to state 232
    simple_condition               shift and go to state 120
    comparison                     shift and go to state 122
    subquery_condition             shift and go to state 123

state 213

    (101) order_by_clause_opt -> ORDER BY . order_list
    (103) order_list -> . order_item
    (104) order_list -> . order_item COMMA order_list
    (105) order_item -> . IDENTIFIER
    (106) order_item -> . IDENTIFIER ASC
    (107) order_item -> . IDENTIFIER DESC
    (108) order_item -> . IDENTIFIER DOT IDENTIFIER
    (109) order_item -> . IDENTIFIER DOT IDENTIFIER ASC
    (110) order_item -> . IDENTIFIER DOT IDENTIFIER DESC

    IDENTIFIER      shift and go to state 235

    order_list                     shift and go to state 233
    order_item                     shift and go to state 234

state 214

    (77) group_by_clause_opt -> GROUP BY column_list .

    ORDER           reduce using rule 77 (group_by_clause_opt -> GROUP BY column_list .)
    HAVING          reduce using rule 77 (group_by_clause_opt -> GROUP BY column_list .)
    LIMIT           reduce using rule 77 (group_by_clause_opt -> GROUP BY column_list .)
    $end            reduce using rule 77 (group_by_clause_opt -> GROUP BY column_list .)
    RPAREN          reduce using rule 77 (group_by_clause_opt -> GROUP BY column_list .)


state 215

    (72) join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .

    JOIN            reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    GROUP           reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    HAVING          reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    $end            reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)
    RPAREN          reduce using rule 72 (join_clause -> JOIN IDENTIFIER IDENTIFIER ON join_condition .)


state 216

    (74) join_condition -> IDENTIFIER DOT . IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 236


state 217

    (73) join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON . join_condition
    (74) join_condition -> . IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 193

    join_condition                 shift and go to state 237

state 218

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list . RPAREN

    RPAREN          shift and go to state 238


state 219

    (89) comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .

    AND             reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    OR              reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    $end            reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    GROUP           reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    ORDER           reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    HAVING          reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    LIMIT           reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)
    RPAREN          reduce using rule 89 (comparison -> IDENTIFIER DOT IDENTIFIER comp_operator expression .)


state 220

    (87) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN . subquery RPAREN
    (79) subquery -> . SELECT select_list FROM table_reference where_clause_opt

    SELECT          shift and go to state 203

    subquery                       shift and go to state 239

state 221

    (86) subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .

    AND             reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    OR              reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    $end            reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    GROUP           reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    ORDER           reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    HAVING          reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    LIMIT           reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)
    RPAREN          reduce using rule 86 (subquery_condition -> IDENTIFIER IN LPAREN subquery RPAREN .)


state 222

    (79) subquery -> SELECT select_list . FROM table_reference where_clause_opt

    FROM            shift and go to state 240


state 223

    (26) primary_key_opt -> PRIMARY KEY AUTO_INCREMENT NOT . NULL

    NULL            shift and go to state 241


state 224

    (25) primary_key_opt -> PRIMARY KEY NOT NULL .
    (27) primary_key_opt -> PRIMARY KEY NOT NULL . AUTO_INCREMENT

    COMMA           reduce using rule 25 (primary_key_opt -> PRIMARY KEY NOT NULL .)
    RPAREN          reduce using rule 25 (primary_key_opt -> PRIMARY KEY NOT NULL .)
    AUTO_INCREMENT  shift and go to state 242


state 225

    (31) primary_key_opt -> AUTO_INCREMENT PRIMARY KEY NOT . NULL

    NULL            shift and go to state 243


state 226

    (32) primary_key_opt -> AUTO_INCREMENT NOT NULL PRIMARY . KEY

    KEY             shift and go to state 244


state 227

    (34) primary_key_opt -> NOT NULL PRIMARY KEY .
    (36) primary_key_opt -> NOT NULL PRIMARY KEY . AUTO_INCREMENT

    COMMA           reduce using rule 34 (primary_key_opt -> NOT NULL PRIMARY KEY .)
    RPAREN          reduce using rule 34 (primary_key_opt -> NOT NULL PRIMARY KEY .)
    AUTO_INCREMENT  shift and go to state 245


state 228

    (37) primary_key_opt -> NOT NULL AUTO_INCREMENT PRIMARY . KEY

    KEY             shift and go to state 246


state 229

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES . IDENTIFIER LPAREN IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 247


state 230

    (44) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause .
    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause . offset_clause
    (115) offset_clause -> . OFFSET NUMBER

    $end            reduce using rule 44 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause .)
    RPAREN          reduce using rule 44 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause .)
    OFFSET          shift and go to state 249

    offset_clause                  shift and go to state 248

state 231

    (113) limit_clause -> LIMIT . NUMBER
    (114) limit_clause -> LIMIT . NUMBER OFFSET NUMBER

    NUMBER          shift and go to state 250


state 232

    (111) having_clause_opt -> HAVING condition .
    (81) condition -> condition . AND condition
    (82) condition -> condition . OR condition

    LIMIT           reduce using rule 111 (having_clause_opt -> HAVING condition .)
    $end            reduce using rule 111 (having_clause_opt -> HAVING condition .)
    RPAREN          reduce using rule 111 (having_clause_opt -> HAVING condition .)
    AND             shift and go to state 146
    OR              shift and go to state 147


state 233

    (101) order_by_clause_opt -> ORDER BY order_list .

    HAVING          reduce using rule 101 (order_by_clause_opt -> ORDER BY order_list .)
    LIMIT           reduce using rule 101 (order_by_clause_opt -> ORDER BY order_list .)
    $end            reduce using rule 101 (order_by_clause_opt -> ORDER BY order_list .)
    RPAREN          reduce using rule 101 (order_by_clause_opt -> ORDER BY order_list .)


state 234

    (103) order_list -> order_item .
    (104) order_list -> order_item . COMMA order_list

    HAVING          reduce using rule 103 (order_list -> order_item .)
    LIMIT           reduce using rule 103 (order_list -> order_item .)
    $end            reduce using rule 103 (order_list -> order_item .)
    RPAREN          reduce using rule 103 (order_list -> order_item .)
    COMMA           shift and go to state 251


state 235

    (105) order_item -> IDENTIFIER .
    (106) order_item -> IDENTIFIER . ASC
    (107) order_item -> IDENTIFIER . DESC
    (108) order_item -> IDENTIFIER . DOT IDENTIFIER
    (109) order_item -> IDENTIFIER . DOT IDENTIFIER ASC
    (110) order_item -> IDENTIFIER . DOT IDENTIFIER DESC

    COMMA           reduce using rule 105 (order_item -> IDENTIFIER .)
    HAVING          reduce using rule 105 (order_item -> IDENTIFIER .)
    LIMIT           reduce using rule 105 (order_item -> IDENTIFIER .)
    $end            reduce using rule 105 (order_item -> IDENTIFIER .)
    RPAREN          reduce using rule 105 (order_item -> IDENTIFIER .)
    ASC             shift and go to state 252
    DESC            shift and go to state 253
    DOT             shift and go to state 254


state 236

    (74) join_condition -> IDENTIFIER DOT IDENTIFIER . EQUALS IDENTIFIER DOT IDENTIFIER

    EQUALS          shift and go to state 255


state 237

    (73) join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .

    JOIN            reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    WHERE           reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    GROUP           reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    ORDER           reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    HAVING          reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    LIMIT           reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    $end            reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)
    RPAREN          reduce using rule 73 (join_clause -> JOIN IDENTIFIER AS IDENTIFIER ON join_condition .)


state 238

    (117) insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN .

    $end            reduce using rule 117 (insert_statement -> INSERT INTO IDENTIFIER LPAREN column_list RPAREN VALUES LPAREN value_list RPAREN .)


state 239

    (87) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery . RPAREN

    RPAREN          shift and go to state 256


state 240

    (79) subquery -> SELECT select_list FROM . table_reference where_clause_opt
    (64) table_reference -> . IDENTIFIER
    (65) table_reference -> . IDENTIFIER IDENTIFIER
    (66) table_reference -> . IDENTIFIER AS IDENTIFIER
    (67) table_reference -> . LPAREN select_statement RPAREN AS IDENTIFIER

    IDENTIFIER      shift and go to state 68
    LPAREN          shift and go to state 69

    table_reference                shift and go to state 257

state 241

    (26) primary_key_opt -> PRIMARY KEY AUTO_INCREMENT NOT NULL .

    COMMA           reduce using rule 26 (primary_key_opt -> PRIMARY KEY AUTO_INCREMENT NOT NULL .)
    RPAREN          reduce using rule 26 (primary_key_opt -> PRIMARY KEY AUTO_INCREMENT NOT NULL .)


state 242

    (27) primary_key_opt -> PRIMARY KEY NOT NULL AUTO_INCREMENT .

    COMMA           reduce using rule 27 (primary_key_opt -> PRIMARY KEY NOT NULL AUTO_INCREMENT .)
    RPAREN          reduce using rule 27 (primary_key_opt -> PRIMARY KEY NOT NULL AUTO_INCREMENT .)


state 243

    (31) primary_key_opt -> AUTO_INCREMENT PRIMARY KEY NOT NULL .

    COMMA           reduce using rule 31 (primary_key_opt -> AUTO_INCREMENT PRIMARY KEY NOT NULL .)
    RPAREN          reduce using rule 31 (primary_key_opt -> AUTO_INCREMENT PRIMARY KEY NOT NULL .)


state 244

    (32) primary_key_opt -> AUTO_INCREMENT NOT NULL PRIMARY KEY .

    COMMA           reduce using rule 32 (primary_key_opt -> AUTO_INCREMENT NOT NULL PRIMARY KEY .)
    RPAREN          reduce using rule 32 (primary_key_opt -> AUTO_INCREMENT NOT NULL PRIMARY KEY .)


state 245

    (36) primary_key_opt -> NOT NULL PRIMARY KEY AUTO_INCREMENT .

    COMMA           reduce using rule 36 (primary_key_opt -> NOT NULL PRIMARY KEY AUTO_INCREMENT .)
    RPAREN          reduce using rule 36 (primary_key_opt -> NOT NULL PRIMARY KEY AUTO_INCREMENT .)


state 246

    (37) primary_key_opt -> NOT NULL AUTO_INCREMENT PRIMARY KEY .

    COMMA           reduce using rule 37 (primary_key_opt -> NOT NULL AUTO_INCREMENT PRIMARY KEY .)
    RPAREN          reduce using rule 37 (primary_key_opt -> NOT NULL AUTO_INCREMENT PRIMARY KEY .)


state 247

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 258


state 248

    (45) select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause .

    $end            reduce using rule 45 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause .)
    RPAREN          reduce using rule 45 (select_statement -> SELECT select_list FROM table_reference join_clauses_opt where_clause_opt group_by_clause_opt order_by_clause_opt having_clause_opt limit_clause offset_clause .)


state 249

    (115) offset_clause -> OFFSET . NUMBER

    NUMBER          shift and go to state 259


state 250

    (113) limit_clause -> LIMIT NUMBER .
    (114) limit_clause -> LIMIT NUMBER . OFFSET NUMBER

  ! shift/reduce conflict for OFFSET resolved as shift
    $end            reduce using rule 113 (limit_clause -> LIMIT NUMBER .)
    RPAREN          reduce using rule 113 (limit_clause -> LIMIT NUMBER .)
    OFFSET          shift and go to state 260

  ! OFFSET          [ reduce using rule 113 (limit_clause -> LIMIT NUMBER .) ]


state 251

    (104) order_list -> order_item COMMA . order_list
    (103) order_list -> . order_item
    (104) order_list -> . order_item COMMA order_list
    (105) order_item -> . IDENTIFIER
    (106) order_item -> . IDENTIFIER ASC
    (107) order_item -> . IDENTIFIER DESC
    (108) order_item -> . IDENTIFIER DOT IDENTIFIER
    (109) order_item -> . IDENTIFIER DOT IDENTIFIER ASC
    (110) order_item -> . IDENTIFIER DOT IDENTIFIER DESC

    IDENTIFIER      shift and go to state 235

    order_item                     shift and go to state 234
    order_list                     shift and go to state 261

state 252

    (106) order_item -> IDENTIFIER ASC .

    COMMA           reduce using rule 106 (order_item -> IDENTIFIER ASC .)
    HAVING          reduce using rule 106 (order_item -> IDENTIFIER ASC .)
    LIMIT           reduce using rule 106 (order_item -> IDENTIFIER ASC .)
    $end            reduce using rule 106 (order_item -> IDENTIFIER ASC .)
    RPAREN          reduce using rule 106 (order_item -> IDENTIFIER ASC .)


state 253

    (107) order_item -> IDENTIFIER DESC .

    COMMA           reduce using rule 107 (order_item -> IDENTIFIER DESC .)
    HAVING          reduce using rule 107 (order_item -> IDENTIFIER DESC .)
    LIMIT           reduce using rule 107 (order_item -> IDENTIFIER DESC .)
    $end            reduce using rule 107 (order_item -> IDENTIFIER DESC .)
    RPAREN          reduce using rule 107 (order_item -> IDENTIFIER DESC .)


state 254

    (108) order_item -> IDENTIFIER DOT . IDENTIFIER
    (109) order_item -> IDENTIFIER DOT . IDENTIFIER ASC
    (110) order_item -> IDENTIFIER DOT . IDENTIFIER DESC

    IDENTIFIER      shift and go to state 262


state 255

    (74) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS . IDENTIFIER DOT IDENTIFIER

    IDENTIFIER      shift and go to state 263


state 256

    (87) subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .

    AND             reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    OR              reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    $end            reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    GROUP           reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    ORDER           reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    HAVING          reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    LIMIT           reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)
    RPAREN          reduce using rule 87 (subquery_condition -> IDENTIFIER DOT IDENTIFIER IN LPAREN subquery RPAREN .)


state 257

    (79) subquery -> SELECT select_list FROM table_reference . where_clause_opt
    (75) where_clause_opt -> . WHERE condition
    (76) where_clause_opt -> .

    WHERE           shift and go to state 88
    RPAREN          reduce using rule 76 (where_clause_opt -> .)

    where_clause_opt               shift and go to state 264

state 258

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 265


state 259

    (115) offset_clause -> OFFSET NUMBER .

    $end            reduce using rule 115 (offset_clause -> OFFSET NUMBER .)
    RPAREN          reduce using rule 115 (offset_clause -> OFFSET NUMBER .)


state 260

    (114) limit_clause -> LIMIT NUMBER OFFSET . NUMBER

    NUMBER          shift and go to state 266


state 261

    (104) order_list -> order_item COMMA order_list .

    HAVING          reduce using rule 104 (order_list -> order_item COMMA order_list .)
    LIMIT           reduce using rule 104 (order_list -> order_item COMMA order_list .)
    $end            reduce using rule 104 (order_list -> order_item COMMA order_list .)
    RPAREN          reduce using rule 104 (order_list -> order_item COMMA order_list .)


state 262

    (108) order_item -> IDENTIFIER DOT IDENTIFIER .
    (109) order_item -> IDENTIFIER DOT IDENTIFIER . ASC
    (110) order_item -> IDENTIFIER DOT IDENTIFIER . DESC

    COMMA           reduce using rule 108 (order_item -> IDENTIFIER DOT IDENTIFIER .)
    HAVING          reduce using rule 108 (order_item -> IDENTIFIER DOT IDENTIFIER .)
    LIMIT           reduce using rule 108 (order_item -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 108 (order_item -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 108 (order_item -> IDENTIFIER DOT IDENTIFIER .)
    ASC             shift and go to state 267
    DESC            shift and go to state 268


state 263

    (74) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER . DOT IDENTIFIER

    DOT             shift and go to state 269


state 264

    (79) subquery -> SELECT select_list FROM table_reference where_clause_opt .

    RPAREN          reduce using rule 79 (subquery -> SELECT select_list FROM table_reference where_clause_opt .)


state 265

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 270


state 266

    (114) limit_clause -> LIMIT NUMBER OFFSET NUMBER .

    OFFSET          reduce using rule 114 (limit_clause -> LIMIT NUMBER OFFSET NUMBER .)
    $end            reduce using rule 114 (limit_clause -> LIMIT NUMBER OFFSET NUMBER .)
    RPAREN          reduce using rule 114 (limit_clause -> LIMIT NUMBER OFFSET NUMBER .)


state 267

    (109) order_item -> IDENTIFIER DOT IDENTIFIER ASC .

    COMMA           reduce using rule 109 (order_item -> IDENTIFIER DOT IDENTIFIER ASC .)
    HAVING          reduce using rule 109 (order_item -> IDENTIFIER DOT IDENTIFIER ASC .)
    LIMIT           reduce using rule 109 (order_item -> IDENTIFIER DOT IDENTIFIER ASC .)
    $end            reduce using rule 109 (order_item -> IDENTIFIER DOT IDENTIFIER ASC .)
    RPAREN          reduce using rule 109 (order_item -> IDENTIFIER DOT IDENTIFIER ASC .)


state 268

    (110) order_item -> IDENTIFIER DOT IDENTIFIER DESC .

    COMMA           reduce using rule 110 (order_item -> IDENTIFIER DOT IDENTIFIER DESC .)
    HAVING          reduce using rule 110 (order_item -> IDENTIFIER DOT IDENTIFIER DESC .)
    LIMIT           reduce using rule 110 (order_item -> IDENTIFIER DOT IDENTIFIER DESC .)
    $end            reduce using rule 110 (order_item -> IDENTIFIER DOT IDENTIFIER DESC .)
    RPAREN          reduce using rule 110 (order_item -> IDENTIFIER DOT IDENTIFIER DESC .)


state 269

    (74) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 271


state 270

    (39) foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN .

    COMMA           reduce using rule 39 (foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 39 (foreign_key_def -> FOREIGN KEY LPAREN IDENTIFIER RPAREN REFERENCES IDENTIFIER LPAREN IDENTIFIER RPAREN .)


state 271

    (74) join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .

    JOIN            reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    WHERE           reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    GROUP           reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    ORDER           reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    HAVING          reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    LIMIT           reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 74 (join_condition -> IDENTIFIER DOT IDENTIFIER EQUALS IDENTIFIER DOT IDENTIFIER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OFFSET in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 100 resolved using rule (join_clauses_opt -> join_clause)
WARNING: rejected rule (join_clauses_opt -> <empty>) in state 100
